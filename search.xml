<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[python-script:处理日志文件]]></title>
    <url>%2Fpython%2Fpython-script-%E5%A4%84%E7%90%86%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[从操作日志中提取命令行信息123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118# -*- coding: UTF-8 -*-'''解析操作日志，提取时间信息和命令行'''import osimport sysimport reimport timedef input_any_exit(): try: input("\r\nEnter any key to exit... ") finally: sys.exit(0)def check_file(): print("&gt;&gt;&gt;请将操作日志重命名为cmd.log放在当前目录下") while True: input("Enter any key to continue... ") file ="cmd.log" if os.path.isfile(file): return file else: print("&gt;&gt;&gt;Error: 当前目录下未找到%s文件!"%(file))def get_file(file): f =open(file,"r") log =f.read() log_list =log.split('StartTime') list = [] for cmd in log_list: #cmd = 'StartTime' + i re_list=[r'\r\n',r'\r',r'\n'] for r in re_list: cmd = re.sub(r,"",cmd) cmd = cmd + "\n" # 在结尾加换行符 #print(cmd) list.append(cmd) f.close() return listdef which_run(file): print("a:提取时间戳和命令行") print("b:提取命令行") num = input("which one(a/b):").lower() if num == 'a': run_time(get_file(file),file) elif num == 'b': run_cmd(get_file(file),file) else: which_run(file)def delete_login(list): while True: yes_or_no = input("是否清除'/--- * ----/'信息[y/n]:").lower() if yes_or_no == 'y': list_new=[] for i in list: if i.find("/---") == -1: list_new.append(i) return list_new elif yes_or_no == 'n': return listdef delete_show(list): while True: yes_or_no=input("是否清除show命令[y/n]:").lower() if yes_or_no == 'y': list_new=[] for i in list: if i.find("show") == -1: list_new.append(i) return list_new elif yes_or_no == 'n': return listdef run_cmd(list,file): print("&gt;&gt;&gt;提取命令行") list_new =delete_login(list) list_new =delete_show(list_new) time_now = time.strftime("%Y-%m-%d_%H-%M", time.localtime()) filename=file.split(".")[0]+"_cmd_&#123;&#125;.log".format(time_now) f = open(filename, "w") for i in list_new: cmd =i.split('CMDLine: ')[-1] f.write(cmd) f.close() print("&gt;&gt;&gt;执行完毕，输出%s"%(filename))def run_time(list,file): print("&gt;&gt;&gt;提取时间戳和命令行") list_new = delete_login(list) list_new = delete_show(list_new) time_now = time.strftime("%Y-%m-%d_%H-%M", time.localtime()) filename=file.split(".")[0]+"_time_&#123;&#125;.log".format(time_now) f = open(filename, "w") for i in list_new: mat = re.findall(r"(\d&#123;1,2&#125;:\d&#123;1,2&#125;:\d&#123;1,2&#125;\s\d&#123;1,2&#125;-\d&#123;1,2&#125;-\d&#123;4&#125;)", i) cmd1 =" ".join(mat) #cmd1 =i.split('FlowID:')[0] cmd2 =i.split('CMDLine: ')[-1] cmd =cmd1+" "+cmd2 f.write(cmd) f.close() print("&gt;&gt;&gt;执行完毕，输出%s"%(filename))if __name__ == '__main__': print("******** Welcome to use this tool! ********") try: which_run(check_file()) except (Exception) as e: print(e) finally: input_any_exit()]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python3安装]]></title>
    <url>%2Fpython%2Fpython3%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[Linux 查看版本： python --verison python3 --version ubuntu安装：使用deadsnakes，它让安装多个版本更容易 sudo add-apt-repository ppa:fkrull/deadsnakes sudo apt-get update sudo apt-get install python3.6 centos安装：yum不支持，需要下载源码安装 #安装依赖 yum -y groupinstall "Development tools" yum -y install zlib-devel openssl-devel #一个比较重要的包（不装的话，python3.7安装会报错） yum install libffi-devel -y #下载 wget https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tar.xz #解压安装 tar -xvJf Python-3.7.1.tar.xz cd Python-3.6.6 ./configure --prefix=/usr/local/bin/python3 sudo make sudo make install #创建软链接 sudo ln -s /usr/local/bin/python3/bin/python3 /usr/bin/python3 sudo ln -s /usr/local/bin/python3/bin/pip3 /usr/bin/pip3 OS X 查看版本： python --verison python3 --version 安装安装Homebrew,brew依赖于Xcode #一般都自带 xcode-select --install #安装homebrew /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" #检查homebrew brew doctor #安装python brew install python3 homebrew用法 搜索软件：brew search 软件名，如brew search wget 安装软件：brew install 软件名，如brew install wget 卸载软件：brew remove 软件名，如brew remove wget brew list 列出已安装的软件 brew update 更新brew brew home 用浏览器打开brew的官方网站 brew info 显示软件信息 brew deps 显示包依赖 brew -v brew -h Windows 检查版本： CMD下： python --version or 直接python尝试进入 安装： #官网下载，安装时选择Add Python to PATH http://python.org/downloads/]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
</search>
