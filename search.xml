<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[2018年总结]]></title>
    <url>%2Fposts%2Ffa88ee57.html</url>
    <content type="text"><![CDATA[2018年总结工作上半年瞎忙缺少思考，下半年很忙很累很烦尝试使用工具禅道进行任务跟踪和工程故障跟踪，因9月份攻关，没有坚持下来尝试配对测试，对进度影响不大但对质量提升有效果抓关键任务，要求修改方案提前传递并组织答疑会，开发和测试在答疑的同时确认关键修改和风险点工程故障接口人做的很痛苦，有时候真叫不动人最近一段时间工作经常出现情绪问题，影响工作效率学习学习使用python，并应用到工作中完成脚本1：对设备的操作日志进行处理，提取关键信息，提高故障分析/复现效率完成脚本2：ssh设备后提取设备关键log完成脚本3：通过snmp获取设备信息，检索在线单板，输出到excel完成脚本4：实现shell功能，支持ssh设备并自动记录回显信息输出到日志文件测试工作任重道远，功能实现固然重要，异常保护同样不能马虎接触markdown，开始写技术笔记有道云、Typora、ulysses、bear、Mweb、印象笔记 各种笔记软件折腾了一圈买了2年阿里云，用来学习linux和折腾部署了GateOne，Nginx学习Flask 框架、html、css 写个人博客网站(断断续续最终夭折)，改为博客工具hexo双11买了好几本python、linux、html/css相关书籍，看的太慢12月开始每天睡前、早起1小时学习生活乒乓忙于工作，没有组织协会的活动，对不起兄弟们小伙伴离职后一直都没有打球，缺少锻炼将工作情绪带回了家，尤其是下半年，这样不好加班太多了，陪老婆孩子的时间太少因为孩子的教育和媳妇吵架最近很少下厨房做饭了，懒了2019年展望python、博客要坚持下去，要注重积累工作生活要有界限，提高工作效率，早下班陪家人带家人出去旅游一次多锻炼、控制情绪，注意身体健康抗住压力、改进方法，服务团队专心做好工作不管是学习，工作，还是生活，都应该在平时养成总结的习惯，至少不会在年总结什么的时候六神无主有始有终，学习如此，做人亦如此做个有耐心的人，不急不燥，对父母多点耐心，对公婆多点耐心，对老婆孩子多点耐心自信一点，相信自己的能力，遇到挫折想办法解决]]></content>
      <categories>
        <category>工作</category>
      </categories>
      <tags>
        <tag>工作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【转载】提升产品质量-需求质量]]></title>
    <url>%2Fposts%2Faaafd623.html</url>
    <content type="text"><![CDATA[【现状】一句话的需求；需求清单、原型、高保真不一致；需求变更没有维护也没有更变记录、没有通知项目所有成员；需求、开发、测试理解不一致；在开发、测试过程中需求变更较频繁；在验收的时候各种细节问题….。产品考虑不周全或者逻辑存在问题，在开发或者测试阶段才暴露；【如上情况如何保障项目质量】需求评审、用例设计、开发期间尽可能的暴露需求设计不合理，逻辑错误等问题；提前让产品介入体验、一确定是否达到预期、二是尽早发现及解决不满足的问题；若没有产品经理时,测试管理人员或者测试人员要站在用户角度都去思考场景,去解决需求存在的问题。测试用例必须经过项目组评审，将做为整个项目质量保障的基线；【如何提升需求质量】站在测试设计的角度将需求、原型要注意的细节整理成《需求细化参考清单》；结合项目情况将共性需求整理成规范，例如input要考虑的场景：1）placeholder提示语 2）长度 3）合法字符 4）输入非法字符、超长字符提示 5）是否为空 6）特殊场景（大小写是否都支持）6)是否有默认值；整理出共性的异常情况（服务器宕、网络异场、磁盘空间不足），列入《需求细化参考清单》或者做为一个标准化的需求去处理；将项目过程中及交付遇到的问题、整理归档、将共性问题提取出来；纳入《需求细化参考清单》；需求测试分析：将需求拆分成story/功能点，结合测试设计方法进行需求分析，尽早发现需求中没有考虑到情况；待《需求细化参考清单》可以做为需求文档编写规范时，在项目组或者公司推广；【目的】尽早发现产品的问题；提升项目质量与生产效率；从源头提升项目质量;]]></content>
      <categories>
        <category>工作</category>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>软件测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python小程序]]></title>
    <url>%2Fposts%2Fa8e44310.html</url>
    <content type="text"><![CDATA[关机12345678# -*- coding: utf-8 -*-import os#linux系统os.system("poweroff")#windows系统os.system("shutdown -s -t 0")os.system('shutdown -s -f -t 0') #强制立即关机获取本机ip地址123456789101112131415161718192021# -*- coding: utf-8 -*-import socket# 查看当前主机名print('当前主机名称为 : ' + socket.gethostname())# 根据主机名称获取当前IPprint('当前主机的IP为: ' + socket.gethostbyname(socket.gethostname()))# 下方代码为获取当前主机IPV4 和IPV6的所有IP地址(所有系统均通用)addrs = socket.getaddrinfo(socket.gethostname(),None)for item in addrs: print(item)# 仅获取当前IPV4地址for item in addrs: if ':' not in item[4][0]: print('当前主机IPV4地址为:' + item[4][0]) break]]></content>
      <categories>
        <category>学习</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[做一名优秀的软件测试工程师]]></title>
    <url>%2Fposts%2F74c7bf03.html</url>
    <content type="text"><![CDATA[软件测试工程师，产品的最初用户&#160; &#160; 一个好的产品，离不开软件测试工程师多个迭代的反复测试，要注重每个细节，充分理解每一个功能的业务逻辑。模块间出现衔接问题时，测试首先发现，当感觉功能不好用时，我们测试也要提出问题，同时给出相对应的改进建议。&#160; &#160; &#160; &#160;综上，测试工程师就是诊治一个产品，判断它实现的业务功能是否符合需求、使用是否符合用户的操作习惯、是否友好&amp;便捷，它是否可以变成更好的产品，给用户更好的体验。软件测试工程师需要的能力工作能力作为一名测师的基本能力，测试需求的分析，测试案例的编写，测试计划的安排、测试策略的采用，发现bug的能力，与一切对接人员的沟通能力，包括和开发人员沟通、产品经理进行沟通、以及一切项目关联人员的沟通。学习能力这是晋升，提高自己的必备技能，因为在测试中，很多测试是重复性的测试，我们要解放自己的双手，减轻自己的重复性工作，只能自己帮自己。学习技能，更是为了自己不被测试圈所淘汰，同时与开发沟通时，不至于被怼。团队合作能力在现代的社会，是很难一个人将事情做好的，必须依赖一个优秀的团队，我们需要进行沟通，有效的沟通和保持很好的交际能力，会让沟通成本降到最低。而且应该学会宽容待人，学会去理解“开发人员”，同时要尊重开发人员的劳动成果——开发出来的产品。软件测试工程师需要的个人素养&#160; &#160; &#160; &#160;作为一名优秀的测试工程师，首先要对测试工作有兴趣：测试工作很多时候都是显得有些枯燥的，因此热爱测试工作，才更容易做好测试工作。同时，应该具有专心、细心、耐心、责任心、自信心。专心主要指测试人员在执行测试任务的时候要专心，不可一心二用。高度集中精神不但能够提高效率，还能发现更多的软件缺陷，业绩最棒的往往是团队中做事精力最集中的那些成员。细心主要指执行测试工作时候要细心，认真执行测试，不可以忽略一些细节。某些缺陷如果不细心很难发现，例如单词拼写……耐心很多测试工作有时候显得非常枯燥，需要很大的耐心才可以做好。如果比较浮躁，就不会做到“专心”和“细心”，这将让很多软件缺陷从你眼前逃过。责任心责任心是做好工作必备的素质之一，测试工程师更应该将其发扬光大。如果测试中没有尽到责任，甚至敷衍了事，这将会把测试工作交给用户来完成，很可能引起非常严重的后果。自信心自信心是现在多数测试工程师都缺少的一项素质，尤其在面对需要编写测试代码等工作的时候，往往认为自己做不到。要想获得更好的职业发展，测试工程师们应该努力学习，建立能“解决一切测试问题”的信心。软件测试工程师-开发过程中的质量检测者和保障者&#160; &#160; &#160; &#160;软件测试是使用人工或自动手段，来运行或测试某个系统的过程。其目的在于检验它是否满足规定的需求或弄清预期结果与实际结果之间的差别。开发工作的根本是尽量实现软件用户的需求，测试工作的根本是检验软件系统是否满足软件用户的需求，负责软件质量的把关工作。除了基本能力和素养，还需要：质量意识在整个软件测试的各个环节中，质量意识一定要贯穿其中。理解功能需求，书写测试案例，执行测试计划，发现问题，提交问题，描述问题，协助解决问题，以及问题的跟踪等，在所有的环节中，一定要注重质量，并且从质量的角度来思考问题。细心且系统每天要重复同样的操作，工作会枯燥无味，并且发现的问题可能很微小或者很杂乱无章、现象不一。在这样的情况下，软件测试人员一定要细心不放过任何微小的错误，并且从很多杂乱的现象中找出一定的规律和复现性。并且在测试中有很好的规划性，先测什么而后测什么，不放过任何软件的死角。在测试中，一定要系统的看待问题，功能模块A的改动会否影响到其他模块的功能，不能想当然，一定要系统性的看待。有时候一个内存地址的改变，都有可能引起准给软件的崩溃。所以一定要系统性的去处理和看待软件中修改的任意一处代码。怀疑有些书是这样定义软件测试的，软件测试不会去证明软件是正确的，而是去证明是错误的，但是我们不可能发现所有的错误。所以有很多时候要去怀疑要去假设。]]></content>
      <categories>
        <category>工作</category>
        <category>软件测试</category>
      </categories>
      <tags>
        <tag>软件测试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[linux笔记]]></title>
    <url>%2Fposts%2F9d87f16a.html</url>
    <content type="text"><![CDATA[常规配置、组件安装、小技巧等[TOC]1.基本配置修改hostname1hostnamectl set-hostname centos7 # 重连立即生效备注：提示符#为root用户，$为普通用户升级组件123456789#centos7yum upgrade yum update #ubuntusudo apt-get update # 升级安装包相关的命令,刷新可安装的软件列表(但是不做任何实际的安装动作) sudo apt-get upgrade # 进行安装包的更新(软件版本的升级) sudo apt-get dist-upgrade # 进行系统版本的升级(Ubuntu版本的升级) sudo do-release-upgrade # Ubuntu官方推荐的系统升级方式,若加参数-d还可以升级到开发版本,但会不稳定 sudo apt-get install net-tools #无法使用ifconfug查看系统版本1234yum update #升级 lsb_release -a # 如果没有lsb yum install redhat-lsb -yvim1234yum -y install vim #默认就能用，不用再替换 # ubuntu vi下删除键和上下左右键的异常解决sudo apt-get remove vim-common sudo apt-get install vim-gtk #安装vim2.开启ssh服务检查ssh工具的客户端和服务器软件包的安装12345678yum list installed | grep ssh #查看openssh.x86_64 7.4p1-16.el7 @base openssh-clients.x86_64 7.4p1-16.el7 @base openssh-server.x86_64 7.4p1-16.el7 @base # ubuntusudo apt-get update #更新源列表 sudo apt-get install openssh-server #安装openssh-server sudo ps -e |grep ssh #查看ssh服务是否启动，有sshd说明已经启动，如果没有启动，"sudo service ssh start"启动。禁止使用root用户的身份进行远程登录123vim /etc/ssh/sshd.conf #ssh服务的配置文件，直接修改 PermitRootLogin no #找到这一行，并将其改为 no systemctl restart sshd #重启一下sshd服务启动openssh-server服务1234systemctl status sshd.service #查看状态systemctl start sshd.service #启动sshdsystemctl enable sshd.service #配置sshd自启动systemctl restart sshd #重启一下sshd服务3.添加用户1234567adduser sss #创建用户sss passwd sss #创建sss的密码 chmod -v u+w /etc/sudoers #增加sudoers文件的写的权限，默认为只读 vim /etc/sudoers #修改 sudoers root ALL=(ALL) ALL sss ALL=(ALL) ALL #添加这一行 chmod -v u-w /etc/sudoers #删除sudoers 的写的权限4.安装zsh oh-my-zsh查看当前安装了多少shell1cat /etc/shells确认当前shell1echo $SHELL安装zsh1sudo apt-get install zsh切换zsh1234chsh -s `which zsh` #之后注销重新登录 chsh -s /bin/zsh # 切回bash chsh -s /bin/bash安装oh-my-zshhttps://github.com/robbyrussell/oh-my-zsh12#使用curl方式安装： sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"配置主题1234vim ~/.zshrcZSH_THEME="robbyrussell" #默认主题，简洁 我用在普通用户#​更换agnoster主题ZSH_THEME="agnoster" #这个主题需要Powerline字体，我用在root用户powerline字体安装：https://github.com/powerline/fonts123git clone https://github.com/powerline/fonts.git cd fonts ./install.sh隐藏[user@hostname]12在~/.zshrc中添加 DEFAULT_USER="username"配置插件1234567891011# 推荐一：（zsh-autosuggestions历史命令智能提示插件git clone https://github.com/zsh-users/zsh-autosuggestions.git $ZSH_CUSTOM/plugins/zsh-autosuggestions # 推荐二：（zsh-syntax-highlighting命令行代码高亮插件）git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting # 插件生效vim ~/.zshrc plugins=( git zsh-autosuggestions zsh-syntax-highlighting )5.vim插件vimplus安装在当前用户下安装只能在当前用户使用,安装之后vim更新为8.1参考：https://github.com/chxuan/vimplus123git clone https://github.com/chxuan/vimplus.git ~/.vimplus cd ~/.vimplus ./install.sh安装jedi1pip install jedi补充vim插件vim .vimrc，增加下列插件，并安装12Plug 'Yggdroot/indentLine' "缩进指示线 Plug 'tell-k/vim-autopep8' "需要pip install autopep8jedi-vim插件12git clone --recursive https://github.com/davidhalter/jedi-vim.git ~/.vim/plugged/jedi-vim Plug 'davidhalter/jedi-vim' "有YCM这个不用6.文件属性修改chown更改文件所有权123chown [-R] 账号名称 文件或目录 #-R 递归将子目录下文件全部修改chown wang test.log #仅更改用户为wang chown root:root test.log #同时更改用户和组为rootchmod更改权限123456789#使用数字更改权限 r=4 w=2 x=1chmod 777 file #rwxrwxrwxchmod 744 file #rwxr--r--#使用字母更改权限 用户(u)、组(g)、其他人(o)、所有用户(a)#rwxrwxrwxchmod a-w file #r-xr-xr-xchmod go-rwx file #rwx------#---------chmod ug+rx file #r-xr-x---7.rsync远程数据同步工具rsync命令是一个远程数据同步工具，可通过LAN/WAN快速同步多台主机间的文件。rsync使用所谓的“rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快rsync特点1.可以镜像保存整个目录树和文件系统2.可以保留原有的权限(permission,mode)，owner,group,时间(修改时间,modify time)，软硬链接，文件acl,文件属性(attributes)信息等3.传输效率高，使用同步算法，只比较变化的4.支持匿名传输，方便网站镜像；也可以做验证，加强安全命令格式12345rsync [OPTION] ... SRC DEST #本地拷贝rsync [OPTION] ... SRC [user@]host:DEST #本地push到远程，支持sshrsync [OPTION] ...[user@]host:SRC DEST #远程pull到本地，支持sshrsync [OPTION] ... SRC [user@]host::DEST #通过服务的方式rsync [OPTION] ...[user@]host::SRC DEST常用选项123456789101112131415-a 包含-rtplgoD-r 同步目录时要加上，类似cp时的-r选项-v 同步时显示一些信息，让我们知道同步的过程-l 保留软连接-L 加上该选项后，同步软链接时会把源文件给同步-p 保持文件的权限属性-o 保持文件的属主-g 保持文件的属组-D 保持设备文件信息-t 保持文件的时间属性--delete 删除DEST中SRC没有的文件--exclude 过滤指定文件，如--exclude “logs”会把文件名包含logs的文件或者目录过滤掉，不同步-P 显示同步过程，比如速率，比-v更加详细-u 加上该选项后，如果DEST中的文件比SRC新，则不同步-z 传输时压缩常用命令12345678#同步目录 注意”/“的差别rsync -avP /root/test/ /tmp/test_dest/#删除目标中源文件里没有的内容rsync -avP --delete /root/test/ /tmp/test_dest/ #过滤掉所有.txt文件rsync -avP --exclude "*.txt" /root/test/ /tmp/test_dest/ #目标中的文件比源新，则不同步rsync -avu /root/test/ root@xx.xx.xx.xx:/test_dest/Linux系统与windows系统文件同步https://my.oschina.net/lanni654321/blog/369595]]></content>
      <categories>
        <category>学习</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[转载]真正厉害的人，早已戒掉了情绪]]></title>
    <url>%2Fposts%2F22da46cf.html</url>
    <content type="text"><![CDATA[戒掉情绪，你就成功了一半。01都说成年人的世界，没有“容易”二字，连发泄情绪都要排个队。工作上，遇到难题要想办法解决；生活上，孩子哭了要想办法逗乐；父母面前，需要你照顾的时候要想尽办法有求必应。你不能在孩子嚎啕大哭的时候，跟着孩子一起哭，更不能在父母需要你的时候，丧气落泪。只有把这一切安顿之后，才能抽空发泄自己的情绪。对此我也深有体会，熟悉我的朋友会发现，我几乎不发朋友圈。因为朋友圈不再是那个可以随时抒发心情的地方，就算实在想发，也要设置分组，认真思考，仔细筛选。如此麻烦，不如不发。但是，在我看来，成年人小心翼翼的崩溃， 除了身不由己，更多的其实是时间有限 ，尤其是事业有成的成功人士，发泄情绪都得掐秒表。自媒体人柳主任在一篇文章中提到，自从创业以来，自己已经戒掉了情绪，或者说变得特别克制自己不要放大负面情绪，不自怜，不沉浸在无用的情绪之中。她说：印象中崩溃大哭的时候，三年多来只有三次。并且最近一次我还是定了个秒表，哭三分钟继续去干活。在这样“一堆工作等着推进，客户等着约见”的工作节奏里，根本没时间崩溃，只能以最快的速度收拾好自己的情绪，继而干劲满满地投入工作。普通人可能不理解这样的发泄方式，但这的确是许多牛人的真实写照。大家熟知的演员杨幂，也是这样一个人，曾经被黑的体无完肤，最终却越挫越勇，稳坐当红花旦的位置。在一次访谈中，她说：我是一个对自己挺狠的人。而“被狠掉”的第一条，是情绪。“我早把情绪戒掉了”，就是和自己死磕，对自己下命令。有一次，有件事让我很生气，我对自己说，给你二十四小时的时间，你必须把这件事压下去。这一天，什么都不做，让自己过去。“杀不死我的只会让我更强大”，她用行动践行了这个道理。这样的姑娘，得到什么都不足为奇。想起稻盛和夫说过的一句话：“ 成功不要无谓的情绪。 ”深以为然。02为什么成功要戒掉情绪？ 因为情绪会影响注意力，缺乏专注，工作效率就大打折扣 。美国心理学家特瑞斯曼教授指出：“不专注时，人们只能对事物的个别特征进行初步加工；而在专注的情况下，则能精细加工，并将其整合为一个整体。也就是说，只有在专注的情况下，我们才能成功地完成手上的任务。”心理学家齐克森米哈里在《心流：最佳体验的心理学》一书中提到这样一个案例：在荷兰一家医院里，有一名患有精神分裂症的女性患者，住院已超过10年，思路不清、病况严重，一直以来都情绪淡漠。医生在对她的跟踪记录里发现，她曾出现过两次情绪高亢的时候，而且正巧都是在修剪指甲时。于是医生找来专业人员教她修剪指甲的相关技巧，而她也十分热衷于学习。没过多久，她就开始替病友修整指甲。此后，她的性格发生了180度转变，没多久就出院了。后来，她在家门口开了一家店，挂起招牌，不到一年就能自力更生了。这个案例说明， 把注意力投入在一件喜爱的事情上，是有疗愈功效的。它能让原本趋于混乱的精神能量变得有秩序，让人重拾生活的热情和意义 。这就是 心流 的力量。心流，是一种将个人的精神力，完全投注在某种活动上的感觉 。心流产生时，会有高度的兴奋及充实感，会感到内心的纯净，对手头任务充满自信。同时很难感觉到时间的流逝，等到结束时发现几个小时已经过去了。当一个人处在心流的状态下，大脑活动的方式，会体现出高效率和准确性，耗费的能量也较少。然而， 激发心流的重要条件之一，就是要做到专注 。如果注意力被负面情绪分走了一大半，就不可能产生这种体验。当然，这里说的情绪主要指的是负面情绪。可见， 戒掉负面情绪，你就成功了一半。03人生在世，难免有这样那样的负面情绪，保证自己的情绪不受外界的困扰，才能提升专注力，掌控好自己的工作和生活。那么， 如何才能戒掉自己的负面情绪？台湾心理咨询师陈志恒介绍了一个方法： 将同理心用在自己身上 。他认为，同理心是心理助人中使用较多的一个技巧，即 在充分理解对方处境的前提下，主动将对方的情绪感受表达出来，让对方知道。这种方法用于情绪低落、沮丧的人时，往往有相当大的杀伤力。而用在自己身上，也是效果卓然。因此，当负面情绪袭来时，别急着告诉自己“冷静”，或者“这种情绪不对，我得克服”，而是先找个地方，沉下心来，静静地感受下自己的内心状态，低声对自己说出自己的情绪，告诉自己：我知道我正在生气/委屈/自卑……谢谢你用这种方式让我知道我的感觉。不要批判、否定，就只是简简单单地描述。当你觉察到，并心平气和地接受了自己的负面情绪时，就会发现，你的情绪已经平稳了许多，可以开始冷静地思考了。因为 觉察本身，就是一种疗愈 。心理学上有个名词叫“ 正念疗法 ”，说的就是这种方法。用正念来排解负面情绪，其原理就是 通过有意图的、不带评判的、对当下的关注或觉察来达到目的。被负面情绪淹没时，试着给自己3分钟不被打扰的时间，把注意力放在呼吸上，发现自己走神时，深吸一口气，同时把注意力带回来，重新放在呼吸上。不断重复做这个简单的尝试，直到你走神的次数变得越来越少，专注的时间变得越来越长。坚持这样的练习，不仅能够戒掉情绪，还能敏锐地在第一时间察觉到，自己的注意力是如何飘走的。戒掉情绪后，你就会收获一个强大的自己。《一生的资本》里有这样一段话：任何时候，一个人都不应该做自己情绪的奴隶 ，不应该使一切行动都受制于自己的情绪，而应该反过来控制情绪。无论境况多么糟糕，你应该努力去支配你的环境，把自己从黑暗中拯救出来。那些扰乱你的、让你崩溃的、害怕的、恐惧的事情，在你充实的生活和忙碌里，真的不值一提 。熬过痛苦的黑夜，天亮后你就是英雄 。]]></content>
      <categories>
        <category>生活</category>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS7部署GateOne]]></title>
    <url>%2Fposts%2Faa509fdc.html</url>
    <content type="text"><![CDATA[Gate One is an HTML5-powered terminal emulator and SSH client官网 https://github.com/liftoff/GateOne1.下载1git clone https://github.com/liftoff/GateOne.gitor 下载从github下载压缩包，解压缩1unzip GateOne-master.zip *#工具：yum install -y unzip zip*2. 所需组件123sudo yum install gcc python-devel sudo pip install tornado==4.5.3sudo pip install html5lib备注：gcc python-devel需要安装；注意回显log，缺少相关包会有错误提示3. 安装备注：python2.7安装,python3安没成功没注意少什么组件12cd GateOne-masterpython setup.py install4. 第一次启动默认启动只能本地访问，端口4431gateone启动报错：这是用tornado 5.1.1时的报错，需要更换tornado 4.5.35. 修改配置gateone第一次运行后在/etc/gateone下产生配置文件,修改10server.conf12345678910111213141516171819202122232425262728293031323334353637383940414243444546cd /etc/gateone/conf.d vim 10server.conf// This is Gate One's main settings file.&#123; // "gateone" server-wide settings fall under "*" "*": &#123; "gateone": &#123; // These settings apply to all of Gate One "address": "", "ca_certs": null, "cache_dir": "/tmp/gateone_cache", "certificate": "/etc/gateone/ssl/certificate.pem", "cookie_secret": "NmJmNzQwODRjZjRlNGQ0NGI2NzMwMzZhZDM2NGE0YWYxO", "debug": false, "disable_ssl": true, #改为true，不用https "embedded": true, #改为true，允许嵌入到网站中 "enable_unix_socket": false, "gid": "0", "https_redirect": false, "js_init": "", "keyfile": "/etc/gateone/ssl/keyfile.pem", "locale": "en_US", "log_file_max_size": 100000000, "log_file_num_backups": 10, "log_file_prefix": "/var/log/gateone/gateone.log", "log_rotate_interval": 1, "log_rotate_mode": "size", "log_rotate_when": "midnight", "log_to_stderr": null, "logging": "info", "multiprocessing_workers": null, "origins": ["localhost", "127.0.0.1", "aliyun", "172.31.1.xxx","xxx.xxx.xxx.xxx"], #加入大网ip "pid_file": "/var/run/gateone.pid", "port": 8080, #端口号 "session_dir": "/tmp/gateone", "session_timeout": "5d", "syslog_facility": "daemon", "uid": "0", "unix_socket_mode": "0600", "unix_socket_path": "/tmp/gateone.sock", "url_prefix": "/", "user_dir": "/var/lib/gateone/users", "user_logs_max_age": "30d" &#125; &#125;&#125;备注：gateone 1.2.0版本不再copy文件到/opt/gateone6. 后台运行1service gateone start7. 设置开启自启动123chmod +x /etc/rc.d/rc.localvim /etc/rc.d/rc.local添加 service gateone start]]></content>
      <categories>
        <category>学习</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS7部署Nginx]]></title>
    <url>%2Fposts%2Fd47303b5.html</url>
    <content type="text"><![CDATA[Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。1.安装依赖包123yum install openssl #安装openssl库yum install zlib #安装zlib库yum install pcre #安装pcre库2.安装Nginx依赖项和Nginx12rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm yum install nginx3.启动Nginx12service nginx start #启动Nginxservice nginx restart #重启Nginx4.配置开机启动123chmod +x /etc/rc.d/rc.localvim /etc/rc.d/rc.local添加 service nginx start5.配置config1234567891011121314151617181920212223242526272829303132333435363738394041424344454647vim /etc/nginx/conf.d/default.conf server &#123; listen 80; server_name 0.0.0.0; root /root/web/blog; #nginx的根目录默认/usr/share/nginx/html/下，修改访问目录 #charset koi8-r; #access_log /var/log/nginx/host.access.log main; location / &#123; root /root/web/blog; #修改访问目录 index index.html index.htm; &#125; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root /root/web/blog; #修改访问目录 &#125; # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \.php$ &#123; # proxy_pass http://127.0.0.1; #&#125; # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \.php$ &#123; # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #&#125; # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\.ht &#123; # deny all; #&#125;&#125;]]></content>
      <categories>
        <category>学习</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python脚本:处理日志文件]]></title>
    <url>%2Fposts%2Ff77f63.html</url>
    <content type="text"><![CDATA[实现从设备操作日志中提取命令行信息、简化打印，便于查看、提高效率123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118 # -*- coding: UTF-8 -*-'''解析操作日志，提取时间信息和命令行'''import osimport sysimport reimport timedef input_any_exit(): try: input("\r\nEnter any key to exit... ") finally: sys.exit(0)def check_file(): print("&gt;&gt;&gt;请将操作日志重命名为cmd.log放在当前目录下") while True: input("Enter any key to continue... ") file ="cmd.log" if os.path.isfile(file): return file else: print("&gt;&gt;&gt;Error: 当前目录下未找到%s文件!"%(file))def get_file(file): f =open(file,"r") log =f.read() log_list =log.split('StartTime') list = [] for cmd in log_list: #cmd = 'StartTime' + i re_list=[r'\r\n',r'\r',r'\n'] for r in re_list: cmd = re.sub(r,"",cmd) cmd = cmd + "\n" # 在结尾加换行符 #print(cmd) list.append(cmd) f.close() return listdef which_run(file): print("a:提取时间戳和命令行") print("b:提取命令行") num = input("which one(a/b):").lower() if num == 'a': run_time(get_file(file),file) elif num == 'b': run_cmd(get_file(file),file) else: which_run(file)def delete_login(list): while True: yes_or_no = input("是否清除'/--- * ----/'信息[y/n]:").lower() if yes_or_no == 'y': list_new=[] for i in list: if i.find("/---") == -1: list_new.append(i) return list_new elif yes_or_no == 'n': return listdef delete_show(list): while True: yes_or_no=input("是否清除show命令[y/n]:").lower() if yes_or_no == 'y': list_new=[] for i in list: if i.find("show") == -1: list_new.append(i) return list_new elif yes_or_no == 'n': return listdef run_cmd(list,file): print("&gt;&gt;&gt;提取命令行") list_new =delete_login(list) list_new =delete_show(list_new) time_now = time.strftime("%Y-%m-%d_%H-%M", time.localtime()) filename=file.split(".")[0]+"_cmd_&#123;&#125;.log".format(time_now) f = open(filename, "w") for i in list_new: cmd =i.split('CMDLine: ')[-1] f.write(cmd) f.close() print("&gt;&gt;&gt;执行完毕，输出%s"%(filename))def run_time(list,file): print("&gt;&gt;&gt;提取时间戳和命令行") list_new = delete_login(list) list_new = delete_show(list_new) time_now = time.strftime("%Y-%m-%d_%H-%M", time.localtime()) filename=file.split(".")[0]+"_time_&#123;&#125;.log".format(time_now) f = open(filename, "w") for i in list_new: mat = re.findall(r"(\d&#123;1,2&#125;:\d&#123;1,2&#125;:\d&#123;1,2&#125;\s\d&#123;1,2&#125;-\d&#123;1,2&#125;-\d&#123;4&#125;)", i) cmd1 =" ".join(mat) #cmd1 =i.split('FlowID:')[0] cmd2 =i.split('CMDLine: ')[-1] cmd =cmd1+" "+cmd2 f.write(cmd) f.close() print("&gt;&gt;&gt;执行完毕，输出%s"%(filename))if __name__ == '__main__': print("******** Welcome to use this tool! ********") try: which_run(check_file()) except (Exception) as e: print(e) finally: input_any_exit()]]></content>
      <categories>
        <category>学习</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python3安装]]></title>
    <url>%2Fposts%2Ff95eec4f.html</url>
    <content type="text"><![CDATA[ubuntu、centos、macOS 以及 windows系统下的python3安装Linux查看版本：python --verison python3 --version ubuntu安装：使用deadsnakes，它让安装多个版本更容易sudo add-apt-repository ppa:fkrull/deadsnakes sudo apt-get update sudo apt-get install python3.6 centos安装：yum不支持，需要下载源码安装#安装依赖 yum -y groupinstall "Development tools" yum -y install zlib-devel openssl-devel #一个比较重要的包（不装的话，python3.7安装会报错） yum install libffi-devel -y #下载 wget https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tar.xz #解压安装 tar -xvJf Python-3.7.1.tar.xz cd Python-3.6.6 ./configure --prefix=/usr/local/bin/python3 sudo make sudo make install #创建软链接 sudo ln -s /usr/local/bin/python3/bin/python3 /usr/bin/python3 sudo ln -s /usr/local/bin/python3/bin/pip3 /usr/bin/pip3 OS X查看版本：python --verison python3 --version 安装安装Homebrew,brew依赖于Xcode#一般都自带 xcode-select --install #安装homebrew /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" #检查homebrew brew doctor #安装python brew install python3 homebrew用法搜索软件：brew search 软件名，如brew search wget 安装软件：brew install 软件名，如brew install wget 卸载软件：brew remove 软件名，如brew remove wget brew list 列出已安装的软件 brew update 更新brew brew home 用浏览器打开brew的官方网站 brew info 显示软件信息 brew deps 显示包依赖 brew -v brew -h Windows检查版本：CMD下： python --version or 直接python尝试进入 安装：#官网下载，安装时选择Add Python to PATH http://python.org/downloads/]]></content>
      <categories>
        <category>学习</category>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
</search>
