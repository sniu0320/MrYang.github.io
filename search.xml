<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python脚本:解析设备的cmdlog日志，提取时间信息和命令行</title>
      <link href="/posts/4ddc4922.html"/>
      <url>/posts/4ddc4922.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>解析设备的cmdlog日志，提取时间信息和命令行<br>处理前：<br><img src="/media/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-02-07%20%E4%B8%8B%E5%8D%8811.30.17.png" alt="屏幕快照 2019-02-07 下午11.30.17"><br>处理后：<br><img src="/media/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202019-02-07%20%E4%B8%8B%E5%8D%8811.25.07.png" alt="屏幕快照 2019-02-07 下午11.25.07"></p></blockquote><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">解析设备的cmdlog日志，提取时间信息和命令行</span></span><br><span class="line"><span class="string">需要将cmdlog文件命令为cmd.log放在脚本当前目录下</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">input_any_exit</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        input(<span class="string">"\r\nEnter any key to exit... "</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_file</span><span class="params">(file)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="keyword">if</span> os.path.isfile(file):</span><br><span class="line">            print(<span class="string">"获取&#123;&#125;文件成功"</span>.format(file))</span><br><span class="line">            <span class="keyword">return</span> file</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">"Error:获取&#123;&#125;文件失败,请将cmdlog文件命名为cmd.log放在脚本当前目录"</span>.format(file))</span><br><span class="line">            input(<span class="string">"Enter any key to continue... "</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">which_run</span><span class="params">(file)</span>:</span></span><br><span class="line">    print(<span class="string">"a:提取时间戳和命令行"</span>)</span><br><span class="line">    print(<span class="string">"b:提取命令行"</span>)</span><br><span class="line">    num = input(<span class="string">"which one(a/b):"</span>).lower()</span><br><span class="line">    <span class="keyword">if</span> num == <span class="string">'a'</span>:</span><br><span class="line">        run_time(get_file(file),file)</span><br><span class="line">    <span class="keyword">elif</span> num == <span class="string">'b'</span>:</span><br><span class="line">        run_cmd(get_file(file),file)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        which_run(file)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file</span><span class="params">(file)</span>:</span></span><br><span class="line">    <span class="string">'''</span></span><br><span class="line"><span class="string">    读取文件为str，然后使用split进行分割得到list</span></span><br><span class="line"><span class="string">    （more方式获取的log记录，无法使用readline）</span></span><br><span class="line"><span class="string">    '''</span></span><br><span class="line">    <span class="keyword">with</span> open(file,<span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        log = f.read() <span class="comment">#type str</span></span><br><span class="line">        <span class="comment">#for r in [r'\r\n',r'\r',r'\n']:</span></span><br><span class="line">        <span class="comment">#    log = re.sub(r,"",log) # 正则去换行符</span></span><br><span class="line">        <span class="comment">#log = log.strip() #strip去掉字符两边的空格和回车换行符</span></span><br><span class="line">        log_list = log.split(<span class="string">'StartTime'</span>) </span><br><span class="line">        list = [ i <span class="keyword">for</span> i <span class="keyword">in</span> log_list ] </span><br><span class="line">    <span class="keyword">return</span> list</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_login</span><span class="params">(list)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        yes_or_no = input(<span class="string">"是否清除'/--- * ----/'信息(用户login/logout记录)[y/n]:"</span>).lower()</span><br><span class="line">        <span class="keyword">if</span> yes_or_no == <span class="string">'y'</span>:</span><br><span class="line">            list_new = [ i <span class="keyword">for</span> i <span class="keyword">in</span> list <span class="keyword">if</span> i.find(<span class="string">"/---"</span>) == <span class="number">-1</span> ] <span class="comment">#使用列表解析</span></span><br><span class="line">            <span class="keyword">return</span> list_new</span><br><span class="line">        <span class="keyword">elif</span> yes_or_no == <span class="string">'n'</span>:</span><br><span class="line">            <span class="keyword">return</span> list</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_show</span><span class="params">(list)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        yes_or_no = input(<span class="string">"是否清除show命令[y/n]:"</span>).lower()</span><br><span class="line">        <span class="keyword">if</span> yes_or_no == <span class="string">'y'</span>:</span><br><span class="line">            list_new = [ i <span class="keyword">for</span> i <span class="keyword">in</span> list <span class="keyword">if</span> i.find(<span class="string">"show"</span>) == <span class="number">-1</span> ] </span><br><span class="line">            <span class="keyword">return</span> list_new</span><br><span class="line">        <span class="keyword">elif</span> yes_or_no == <span class="string">'n'</span>:</span><br><span class="line">            <span class="keyword">return</span> list</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_fail</span><span class="params">(list)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        yes_or_no = input(<span class="string">"是否清除'Result:failed'(执行失败)的命令[y/n]:"</span>).lower()</span><br><span class="line">        <span class="keyword">if</span> yes_or_no == <span class="string">'y'</span>:</span><br><span class="line">            list_new = [ i <span class="keyword">for</span> i <span class="keyword">in</span> list <span class="keyword">if</span> i.find(<span class="string">"Result: failed"</span>) == <span class="number">-1</span> ] </span><br><span class="line">            <span class="keyword">return</span> list_new</span><br><span class="line">        <span class="keyword">elif</span> yes_or_no == <span class="string">'n'</span>:</span><br><span class="line">            <span class="keyword">return</span> list</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_cmd</span><span class="params">(list,file)</span>:</span></span><br><span class="line">    print(<span class="string">"&gt;&gt;&gt;提取命令行"</span>)</span><br><span class="line">    list_new = delete_login(list)</span><br><span class="line">    list_new = delete_show(list_new)</span><br><span class="line">    list_new = delete_fail(list_new)</span><br><span class="line">    time_now = time.strftime(<span class="string">"%Y-%m-%d_%H-%M"</span>, time.localtime())</span><br><span class="line">    filename = file.split(<span class="string">"."</span>)[<span class="number">0</span>]+<span class="string">"_cmd_&#123;&#125;.log"</span>.format(time_now)</span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">"w"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> list_new:</span><br><span class="line">            cmd = i.split(<span class="string">'CMDLine: '</span>)[<span class="number">-1</span>]</span><br><span class="line">            f.write(cmd)</span><br><span class="line">    print(<span class="string">"&gt;&gt;&gt;执行完毕，输出&#123;&#125;"</span>.format(filename))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run_time</span><span class="params">(list,file)</span>:</span></span><br><span class="line">    print(<span class="string">"&gt;&gt;&gt;提取时间戳和命令行"</span>)</span><br><span class="line">    list_new = delete_login(list)</span><br><span class="line">    list_new = delete_show(list_new)</span><br><span class="line">    list_new = delete_fail(list_new)</span><br><span class="line">    time_now = time.strftime(<span class="string">"%Y-%m-%d_%H-%M"</span>, time.localtime())</span><br><span class="line">    filename = file.split(<span class="string">"."</span>)[<span class="number">0</span>]+<span class="string">"_time_&#123;&#125;.log"</span>.format(time_now)</span><br><span class="line">    <span class="keyword">with</span> open(filename, <span class="string">"w"</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> list_new:</span><br><span class="line">            <span class="comment">#找到RE匹配的所有字符串，并把他们作为一个列表返回</span></span><br><span class="line">            mat = re.findall(<span class="string">r"(\d&#123;1,2&#125;:\d&#123;1,2&#125;:\d&#123;1,2&#125;\s\d&#123;1,2&#125;-\d&#123;1,2&#125;-\d&#123;4&#125;)"</span>, i)</span><br><span class="line">            cmd1 = <span class="string">" "</span>.join(mat)</span><br><span class="line">            cmd2_t = i.split(<span class="string">'VtyNo:'</span>)[<span class="number">-1</span>]</span><br><span class="line">            cmd2 = cmd2_t.split()[<span class="number">0</span>]</span><br><span class="line">            cmd3_t = i.split(<span class="string">'Result:'</span>)[<span class="number">-1</span>]</span><br><span class="line">            cmd3 = cmd3_t.split()[<span class="number">0</span>]</span><br><span class="line">            cmd4 = i.split(<span class="string">'CMDLine:'</span>)[<span class="number">-1</span>]</span><br><span class="line">            cmd = cmd1 + <span class="string">" "</span> + cmd2 + <span class="string">" "</span> + cmd3 + cmd4</span><br><span class="line">            f.write(cmd)</span><br><span class="line">    print(<span class="string">"&gt;&gt;&gt;执行完毕，输出&#123;&#125;"</span>.format(filename))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">"******** Welcome to use this tool! ********"</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        which_run(check_file(<span class="string">"cmd.log"</span>))</span><br><span class="line">    <span class="keyword">except</span> (Exception) <span class="keyword">as</span> e:</span><br><span class="line">        print(e)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        input_any_exit()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>报BUG是一门学问</title>
      <link href="/posts/c6a9b354.html"/>
      <url>/posts/c6a9b354.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>相信大部分测试人员在报bug时，或多或少与开发的沟通存在些问题。如何更有效地说服开发接收你的bug？</p></blockquote><a id="more"></a><p><strong>1、首先确定这是一个个实实在在的bug。</strong></p><p>不要出现因为配置原因或者是操作错误引起的”bug”，这样是会被开发”鄙视”的。作为测试人员应该尽量做到专业，尽量少给开发找麻烦，不要制造一些并不存在的bug、不要提交一些重复的bug。</p><p><strong>2、写好bug描述。确保依照bug描述能重现BUG的过程。</strong></p><p>这很重要！有时候开发看到一个莫名其妙的bug，描述不清楚，还无法重现，他会很生气。这直接会影响测试人员在开发心目中的形象。我们既然提交这个bug，就必须对它负责任。Bug描述精确、没有歧义，详细简洁的重现步骤，bug截图是必须的。如果是特殊的测试数据，我们还需要附带这些数据。对于重现率很低的问题，我们需要注明偶现，详细记录当时的环境信息。如操作系统、产品名称、版本、操作步骤、是否机器相关、是否产品相关等。</p><p><strong>3、提升自己的专业技能。</strong></p><p>我们应该尽量提升个人技能。我不是说要学习什么测试框架、什么自动化性能测试工具，这在以后都可以学习。我们要先保证最最基本的，就是对业务分析的能力。要充分熟悉我们软件产品各个层面的业务，包括功能业务，代码实现逻辑，环境配置部署等。如果你了解到类似充值这种操作，是必须要有真实接入的第三方支付平台接口，那么你就清楚为什么在测试的时候会出现支付页跳转界面异常的提示了，自然而然也会清楚这不是代码的问题，而是没配置。你就不会出现第1点中的问题。而且在说服开发接受你的bug时，才会更加做到有理有据。</p><p><strong>4、测试应把握重点。</strong></p><p>测试应把握重点，不要在无关紧要的地方测试过多，也不要为了无关紧要的所谓的”bug”浪费沟通成本。什么是重点，就是产品的主要功能，用户经常会用到的操作。如果是需求明确的严重问题，我相信只要是开发，他都会想法设法去修复它。但比如说，一些非常规操作导致的严重问题，开发人员会说，实际场景中，用户是不会这样操作的。对于这些问题，沟通是很浪费成本的，可以把问题记录在日报中，反馈给测试老大或项目负责人，由他们来评估。再比如说一些个人界面建议，我们可以提交bug，但是开发不改，也不影响用户使用的，我们不用过多纠结。</p><p><strong>5、问题集中起来咨询开发。</strong></p><p>开发也很忙，不要一发现跟预期不清楚的就直接发个qq消息过去。因为在忙的情况下，很大程度上你抛过去的问题都会石沉大海。把你个人需要问的问题做一下整理，集中起来问开发。为了沟通的高效率，最好是跟开发进行面对面的交流（除非你需要保留截图证据）。跟开发约个时间，直接去办公位找他。如果你是颜值一派或是性格可爱派，这种方法尤其可行。</p><p><strong>6、做个聪明的测试人员</strong></p><p>a、注意跟开发沟通的语气</p><p>要有换位思维的方式，做事情对事不对人，处理事情一定要有一颗宽容的心。只有这样，才能够很好的说服研发去修改Bug。</p><p>b、和开发人员搞好私人关系。</p><p>一旦关系好了，啥话都好说，他也不会觉得你烦。但是别因为关系好，bug就直接口头叙述，不提交到bug平台做好统计记录</p><blockquote><p>不论是测试还是开发，都是为了更好的完善产品，多站在对方立场想一想。我们生活依然是很美好的呢</p></blockquote><p>转自：<a href="https://www.jianshu.com/p/a26f7dcf5043?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note" target="_blank" rel="noopener">【软件测试】报bug是一门艺术，教你如何佛系的工作</a></p>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
          <category> 软件测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2018年总结</title>
      <link href="/posts/fa88ee57.html"/>
      <url>/posts/fa88ee57.html</url>
      
        <content type="html"><![CDATA[<h1 id="2018年总结"><a href="#2018年总结" class="headerlink" title="2018年总结"></a>2018年总结</h1><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><ul><li>上半年瞎忙缺少思考，下半年很忙很累很烦</li><li>尝试使用工具<strong>禅道</strong>进行任务跟踪和工程故障跟踪，因9月份攻关，没有坚持下来</li><li>尝试配对测试，对进度影响不大但对质量提升有效果</li><li>抓关键任务，要求修改方案提前传递并组织答疑会，开发和测试在答疑的同时确认关键修改和风险点</li><li>工程故障接口人做的很痛苦，有时候真叫不动人</li><li>最近一段时间工作经常出现情绪问题，影响工作效率</li></ul><a id="more"></a><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><ul><li><p>学习使用python，并应用到工作中</p><ul><li><p>完成脚本1：对设备的操作日志进行处理，提取关键信息，提高故障分析/复现效率</p></li><li><p>完成脚本2：ssh设备后提取设备关键log</p></li><li><p>完成脚本3：通过snmp获取设备信息，检索在线单板，输出到excel</p></li><li><p>完成脚本4：实现shell功能，支持ssh设备并自动记录回显信息输出到日志文件</p><blockquote><p>测试工作任重道远，功能实现固然重要，异常保护同样不能马虎</p></blockquote></li></ul></li><li><p>接触markdown，开始写技术笔记</p><ul><li>有道云、Typora、ulysses、bear、Mweb、印象笔记 各种笔记软件折腾了一圈</li></ul></li><li><p>买了2年阿里云，用来学习linux和折腾</p><ul><li>部署了GateOne，Nginx</li><li>学习Flask 框架、html、css 写个人博客网站(断断续续最终夭折)，改为博客工具hexo</li></ul></li><li><p>双11买了好几本python、linux、html/css相关书籍，看的太慢</p><p>12月开始每天睡前、早起1小时学习</p></li></ul><h2 id="生活"><a href="#生活" class="headerlink" title="生活"></a>生活</h2><ul><li>乒乓<ul><li>忙于工作，没有组织协会的活动，对不起兄弟们</li><li>小伙伴离职后一直都没有打球，缺少锻炼</li></ul></li><li>将工作情绪带回了家，尤其是下半年，这样不好</li><li>加班太多了，陪老婆孩子的时间太少</li><li>因为孩子的教育和媳妇吵架</li><li>最近很少下厨房做饭了，懒了</li></ul><h1 id="2019年展望"><a href="#2019年展望" class="headerlink" title="2019年展望"></a>2019年展望</h1><ul><li>python、博客要坚持下去，要注重积累</li><li>工作生活要有界限，提高工作效率，早下班陪家人</li><li>带家人出去旅游一次</li><li>多锻炼、控制情绪，注意身体健康</li><li>抗住压力、改进方法，服务团队专心做好工作</li></ul><blockquote><p>不管是学习，工作，还是生活，都应该在平时养成总结的习惯，至少不会在年总结什么的时候六神无主<br>有始有终，学习如此，做人亦如此<br>做个有耐心的人，不急不燥，对父母多点耐心，对公婆多点耐心，对老婆孩子多点耐心<br>自信一点，相信自己的能力，遇到挫折想办法解决</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【转载】提升产品质量-需求质量</title>
      <link href="/posts/aaafd623.html"/>
      <url>/posts/aaafd623.html</url>
      
        <content type="html"><![CDATA[<h2 id="【现状】"><a href="#【现状】" class="headerlink" title="【现状】"></a>【现状】</h2><ol><li>一句话的需求；</li><li>需求清单、原型、高保真不一致；</li><li>需求变更没有维护也没有更变记录、没有通知项目所有成员；</li><li>需求、开发、测试理解不一致；</li><li>在开发、测试过程中需求变更较频繁；</li><li>在验收的时候各种细节问题……。</li><li>产品考虑不周全或者逻辑存在问题，在开发或者测试阶段才暴露；</li></ol><a id="more"></a><h2 id="【如上情况如何保障项目质量】"><a href="#【如上情况如何保障项目质量】" class="headerlink" title="【如上情况如何保障项目质量】"></a>【如上情况如何保障项目质量】</h2><ol><li>需求评审、用例设计、开发期间尽可能的暴露需求设计不合理，逻辑错误等问题；</li><li>提前让产品介入体验、一确定是否达到预期、二是尽早发现及解决不满足的问题；</li><li>若没有产品经理时,测试管理人员或者测试人员要站在用户角度都去思考场景,去解决需求存在的问题。</li><li>测试用例必须经过项目组评审，将做为整个项目质量保障的基线；</li></ol><h2 id="【如何提升需求质量】"><a href="#【如何提升需求质量】" class="headerlink" title="【如何提升需求质量】"></a>【如何提升需求质量】</h2><ol><li>站在测试设计的角度将需求、原型要注意的细节整理成《需求细化参考清单》；</li><li>结合项目情况将共性需求整理成规范，例如input要考虑的场景：1）placeholder提示语 2）长度 3）合法字符 4）输入非法字符、超长字符提示 5）是否为空 6）特殊场景（大小写是否都支持）6)是否有默认值；</li><li>整理出共性的异常情况（服务器宕、网络异场、磁盘空间不足），列入《需求细化参考清单》或者做为一个标准化的需求去处理；</li><li>将项目过程中及交付遇到的问题、整理归档、将共性问题提取出来；纳入《需求细化参考清单》；</li><li>需求测试分析：将需求拆分成story/功能点，结合测试设计方法进行需求分析，尽早发现需求中没有考虑到情况；</li><li>待《需求细化参考清单》可以做为需求文档编写规范时，在项目组或者公司推广；</li></ol><h2 id="【目的】"><a href="#【目的】" class="headerlink" title="【目的】"></a>【目的】</h2><ol><li>尽早发现产品的问题；</li><li>提升项目质量与生产效率；</li><li>从源头提升项目质量；</li></ol>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
          <category> 软件测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python小程序</title>
      <link href="/posts/a8e44310.html"/>
      <url>/posts/a8e44310.html</url>
      
        <content type="html"><![CDATA[<h2 id="关机"><a href="#关机" class="headerlink" title="关机"></a>关机</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment">#linux系统</span></span><br><span class="line">os.system(<span class="string">"poweroff"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#windows系统</span></span><br><span class="line">os.system(<span class="string">"shutdown -s -t 0"</span>)</span><br><span class="line">os.system(<span class="string">'shutdown -s -f -t 0'</span>)  <span class="comment">#强制立即关机</span></span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="获取本机ip地址"><a href="#获取本机ip地址" class="headerlink" title="获取本机ip地址"></a>获取本机ip地址</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看当前主机名</span></span><br><span class="line">print(<span class="string">'当前主机名称为 : '</span> + socket.gethostname())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据主机名称获取当前IP</span></span><br><span class="line">print(<span class="string">'当前主机的IP为: '</span> + socket.gethostbyname(socket.gethostname()))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 下方代码为获取当前主机IPV4 和IPV6的所有IP地址(所有系统均通用)</span></span><br><span class="line">addrs = socket.getaddrinfo(socket.gethostname(),<span class="keyword">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> addrs:</span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅获取当前IPV4地址</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> addrs:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">':'</span> <span class="keyword">not</span> <span class="keyword">in</span> item[<span class="number">4</span>][<span class="number">0</span>]:</span><br><span class="line">        print(<span class="string">'当前主机IPV4地址为:'</span> + item[<span class="number">4</span>][<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>做一名优秀的软件测试工程师</title>
      <link href="/posts/74c7bf03.html"/>
      <url>/posts/74c7bf03.html</url>
      
        <content type="html"><![CDATA[<h2 id="软件测试工程师，产品的最初用户"><a href="#软件测试工程师，产品的最初用户" class="headerlink" title="软件测试工程师，产品的最初用户"></a>软件测试工程师，产品的最初用户</h2><p>&#160; &#160; &#160; &#160; 一个好的产品，离不开软件测试工程师多个迭代的反复测试，要注重每个细节，充分理解每一个功能的业务逻辑。模块间出现衔接问题时，测试首先发现，当感觉功能不好用时，我们测试也要提出问题，同时给出相对应的改进建议。<br>&#160; &#160; &#160; &#160;综上，测试工程师就是诊治一个产品，判断它实现的业务功能是否符合需求、使用是否符合用户的操作习惯、是否友好&amp;便捷，它是否可以变成更好的产品，给用户更好的体验。</p><a id="more"></a><h2 id="软件测试工程师需要的能力"><a href="#软件测试工程师需要的能力" class="headerlink" title="软件测试工程师需要的能力"></a>软件测试工程师需要的能力</h2><ol><li><p>工作能力<br>作为一名测师的基本能力，测试需求的分析，测试案例的编写，测试计划的安排、测试策略的采用，发现bug的能力，与一切对接人员的沟通能力，包括和开发人员沟通、产品经理进行沟通、以及一切项目关联人员的沟通。</p></li><li><p>学习能力<br>这是晋升，提高自己的必备技能，因为在测试中，很多测试是重复性的测试，我们要解放自己的双手，减轻自己的重复性工作，只能自己帮自己。学习技能，更是为了自己不被测试圈所淘汰，同时与开发沟通时，不至于被怼。</p></li><li><p>团队合作能力<br>在现代的社会，是很难一个人将事情做好的，必须依赖一个优秀的团队，我们需要进行沟通，有效的沟通和保持很好的交际能力，会让沟通成本降到最低。而且应该学会宽容待人，学会去理解“开发人员”，同时要尊重开发人员的劳动成果——开发出来的产品。</p></li></ol><h2 id="软件测试工程师需要的个人素养"><a href="#软件测试工程师需要的个人素养" class="headerlink" title="软件测试工程师需要的个人素养"></a>软件测试工程师需要的个人素养</h2><p>&#160; &#160; &#160; &#160;作为一名优秀的测试工程师，首先要对测试工作有兴趣：测试工作很多时候都是显得有些枯燥的，因此热爱测试工作，才更容易做好测试工作。同时，应该具有<strong>专心</strong>、<strong>细心</strong>、<strong>耐心</strong>、<strong>责任心</strong>、<strong>自信心</strong>。</p><ol><li><p>专心<br>主要指测试人员在执行测试任务的时候要专心，不可一心二用。高度集中精神不但能够提高效率，还能发现更多的软件缺陷，业绩最棒的往往是团队中做事精力最集中的那些成员。</p></li><li><p>细心<br>主要指执行测试工作时候要细心，认真执行测试，不可以忽略一些细节。某些缺陷如果不细心很难发现，例如单词拼写……</p></li><li><p>耐心<br>很多测试工作有时候显得非常枯燥，需要很大的耐心才可以做好。如果比较浮躁，就不会做到“专心”和“细心”，这将让很多软件缺陷从你眼前逃过。</p></li><li><p>责任心<br>责任心是做好工作必备的素质之一，测试工程师更应该将其发扬光大。如果测试中没有尽到责任，甚至敷衍了事，这将会把测试工作交给用户来完成，很可能引起非常严重的后果。</p></li><li><p>自信心<br>自信心是现在多数测试工程师都缺少的一项素质，尤其在面对需要编写测试代码等工作的时候，往往认为自己做不到。要想获得更好的职业发展，测试工程师们应该努力学习，建立能“解决一切测试问题”的信心。</p></li></ol><h2 id="软件测试工程师-开发过程中的质量检测者和保障者"><a href="#软件测试工程师-开发过程中的质量检测者和保障者" class="headerlink" title="软件测试工程师-开发过程中的质量检测者和保障者"></a>软件测试工程师-开发过程中的质量检测者和保障者</h2><p>&#160; &#160; &#160; &#160;软件测试是使用人工或自动手段，来运行或测试某个系统的过程。其目的在于检验它是否满足规定的需求或弄清预期结果与实际结果之间的差别。开发工作的根本是尽量实现软件用户的需求，测试工作的根本是检验软件系统是否满足软件用户的需求，负责软件质量的把关工作。除了基本能力和素养，还需要：</p><ol><li><p>质量意识<br>在整个软件测试的各个环节中，质量意识一定要贯穿其中。理解功能需求，书写测试案例，执行测试计划，发现问题，提交问题，描述问题，协助解决问题，以及问题的跟踪等，在所有的环节中，一定要注重质量，并且从质量的角度来思考问题。</p></li><li><p>细心且系统<br>每天要重复同样的操作，工作会枯燥无味，并且发现的问题可能很微小或者很杂乱无章、现象不一。在这样的情况下，软件测试人员一定要细心不放过任何微小的错误，并且从很多杂乱的现象中找出一定的规律和复现性。并且在测试中有很好的规划性，先测什么而后测什么，不放过任何软件的死角。在测试中，一定要系统的看待问题，功能模块A的改动会否影响到其他模块的功能，不能想当然，一定要系统性的看待。有时候一个内存地址的改变，都有可能引起准给软件的崩溃。所以一定要系统性的去处理和看待软件中修改的任意一处代码。</p></li><li><p>怀疑<br>有些书是这样定义软件测试的，软件测试不会去证明软件是正确的，而是去证明是错误的，但是我们不可能发现所有的错误。所以有很多时候要去怀疑要去假设。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
          <category> 软件测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux笔记</title>
      <link href="/posts/9d87f16a.html"/>
      <url>/posts/9d87f16a.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>常规配置、组件安装、小技巧等</p></blockquote><a id="more"></a><h2 id="1-基本配置"><a href="#1-基本配置" class="headerlink" title="1.基本配置"></a>1.基本配置</h2><ul><li>修改hostname<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname centos7 <span class="comment"># 重连立即生效</span></span><br></pre></td></tr></table></figure></li></ul><p>备注：提示符#为root用户，$为普通用户</p><ul><li><p>升级组件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#centos7</span></span><br><span class="line">yum upgrade </span><br><span class="line">yum update </span><br><span class="line"><span class="comment">#ubuntu</span></span><br><span class="line">sudo apt-get update <span class="comment"># 升级安装包相关的命令,刷新可安装的软件列表(但是不做任何实际的安装动作) </span></span><br><span class="line">sudo apt-get upgrade <span class="comment"># 进行安装包的更新(软件版本的升级) </span></span><br><span class="line">sudo apt-get dist-upgrade <span class="comment"># 进行系统版本的升级(Ubuntu版本的升级) </span></span><br><span class="line">sudo do-release-upgrade <span class="comment"># Ubuntu官方推荐的系统升级方式,若加参数-d还可以升级到开发版本,但会不稳定 </span></span><br><span class="line">sudo apt-get install net-tools <span class="comment">#无法使用ifconfug</span></span><br></pre></td></tr></table></figure></li><li><p>查看系统版本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum update <span class="comment">#升级 </span></span><br><span class="line">lsb_release -a </span><br><span class="line"> <span class="comment"># 如果没有lsb </span></span><br><span class="line">yum install redhat-lsb -y</span><br></pre></td></tr></table></figure></li><li><p>vim </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum -y install vim <span class="comment">#默认就能用，不用再替换 </span></span><br><span class="line"><span class="comment"># ubuntu vi下删除键和上下左右键的异常解决</span></span><br><span class="line">sudo apt-get remove vim-common </span><br><span class="line">sudo apt-get install vim-gtk <span class="comment">#安装vim</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="2-开启ssh服务"><a href="#2-开启ssh服务" class="headerlink" title="2.开启ssh服务"></a>2.开启ssh服务</h2><ul><li><p>检查ssh工具的客户端和服务器软件包的安装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum list installed | grep ssh <span class="comment">#查看</span></span><br><span class="line">openssh.x86_64                          <span class="number">7.4</span>p1<span class="number">-16.</span>el7                   @base    </span><br><span class="line">openssh-clients.x86_64                  <span class="number">7.4</span>p1<span class="number">-16.</span>el7                   @base    </span><br><span class="line">openssh-server.x86_64                   <span class="number">7.4</span>p1<span class="number">-16.</span>el7                   @base  </span><br><span class="line"><span class="comment"># ubuntu</span></span><br><span class="line">sudo apt-get update <span class="comment">#更新源列表 </span></span><br><span class="line">sudo apt-get install openssh-server <span class="comment">#安装openssh-server </span></span><br><span class="line">sudo ps -e |grep ssh <span class="comment">#查看ssh服务是否启动，有sshd说明已经启动，如果没有启动，"sudo service ssh start"启动。</span></span><br></pre></td></tr></table></figure></li><li><p>禁止使用root用户的身份进行远程登录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd.conf <span class="comment">#ssh服务的配置文件，直接修改 </span></span><br><span class="line">PermitRootLogin no <span class="comment">#找到这一行，并将其改为 no </span></span><br><span class="line">systemctl restart sshd <span class="comment">#重启一下sshd服务</span></span><br></pre></td></tr></table></figure></li><li><p>启动openssh-server服务</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl status sshd.service <span class="comment">#查看状态</span></span><br><span class="line">systemctl start sshd.service <span class="comment">#启动sshd</span></span><br><span class="line">systemctl enable sshd.service <span class="comment">#配置sshd自启动</span></span><br><span class="line">systemctl restart sshd <span class="comment">#重启一下sshd服务</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="3-添加用户"><a href="#3-添加用户" class="headerlink" title="3.添加用户"></a>3.添加用户</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">adduser sss <span class="comment">#创建用户sss </span></span><br><span class="line">passwd sss <span class="comment">#创建sss的密码 </span></span><br><span class="line">chmod -v u+w /etc/sudoers   <span class="comment">#增加sudoers文件的写的权限，默认为只读 </span></span><br><span class="line">vim /etc/sudoers <span class="comment">#修改 sudoers </span></span><br><span class="line">root    ALL=(ALL)       ALL </span><br><span class="line">sss    ALL=(ALL)       ALL <span class="comment">#添加这一行 </span></span><br><span class="line">chmod -v u-w /etc/sudoers <span class="comment">#删除sudoers 的写的权限</span></span><br></pre></td></tr></table></figure><h2 id="4-安装zsh-oh-my-zsh"><a href="#4-安装zsh-oh-my-zsh" class="headerlink" title="4.安装zsh  oh-my-zsh"></a>4.安装zsh  oh-my-zsh</h2><ul><li><p>查看当前安装了多少shell </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/shells</span><br></pre></td></tr></table></figure></li><li><p>确认当前shell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo $SHELL</span><br></pre></td></tr></table></figure></li><li><p>安装zsh </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install zsh</span><br></pre></td></tr></table></figure></li><li><p>切换zsh </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chsh -s `which zsh` <span class="comment">#之后注销重新登录 </span></span><br><span class="line">chsh -s /bin/zsh </span><br><span class="line"><span class="comment"># 切回bash </span></span><br><span class="line">chsh -s /bin/bash</span><br></pre></td></tr></table></figure></li><li><p>安装oh-my-zsh<br><a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">https://github.com/robbyrussell/oh-my-zsh</a> </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用curl方式安装： </span></span><br><span class="line">sh -c <span class="string">"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"</span></span><br></pre></td></tr></table></figure></li><li><p>配置主题 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br><span class="line">ZSH_THEME=<span class="string">"robbyrussell"</span> <span class="comment">#默认主题，简洁 我用在普通用户</span></span><br><span class="line"><span class="comment">#​更换agnoster主题</span></span><br><span class="line">ZSH_THEME=<span class="string">"agnoster"</span> <span class="comment">#这个主题需要Powerline字体，我用在root用户</span></span><br></pre></td></tr></table></figure></li></ul><ul><li>powerline字体安装：<br><a href="https://github.com/powerline/fonts" target="_blank" rel="noopener">https://github.com/powerline/fonts</a> <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/powerline/fonts.git </span><br><span class="line">cd fonts </span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>隐藏[user@hostname] </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在~/.zshrc中添加 </span><br><span class="line">DEFAULT_USER=<span class="string">"username"</span></span><br></pre></td></tr></table></figure></li><li><p>配置插件 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 推荐一：（zsh-autosuggestions历史命令智能提示插件</span></span><br><span class="line">git clone https://github.com/zsh-users/zsh-autosuggestions.git $ZSH_CUSTOM/plugins/zsh-autosuggestions </span><br><span class="line"><span class="comment"># 推荐二：（zsh-syntax-highlighting命令行代码高亮插件）</span></span><br><span class="line">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting </span><br><span class="line"><span class="comment"># 插件生效</span></span><br><span class="line">vim ~/.zshrc </span><br><span class="line">plugins=( </span><br><span class="line">git </span><br><span class="line">zsh-autosuggestions </span><br><span class="line">zsh-syntax-highlighting </span><br><span class="line">)</span><br></pre></td></tr></table></figure></li></ul><h2 id="5-vim插件vimplus安装"><a href="#5-vim插件vimplus安装" class="headerlink" title="5.vim插件vimplus安装"></a>5.vim插件vimplus安装</h2><ul><li><p>在当前用户下安装只能在当前用户使用,安装之后vim更新为8.1<br>参考：<a href="https://github.com/chxuan/vimplus" target="_blank" rel="noopener">https://github.com/chxuan/vimplus</a>  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/chxuan/vimplus.git ~/.vimplus </span><br><span class="line">cd ~/.vimplus </span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure></li><li><p>安装jedi </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install jedi</span><br></pre></td></tr></table></figure></li><li><p>补充vim插件<br>vim .vimrc，增加下列插件，并安装 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Plug <span class="string">'Yggdroot/indentLine'</span> <span class="string">"缩进指示线 </span></span><br><span class="line"><span class="string">Plug 'tell-k/vim-autopep8' "</span>需要pip install autopep8</span><br></pre></td></tr></table></figure></li></ul><ul><li>jedi-vim插件 <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone --recursive https://github.com/davidhalter/jedi-vim.git ~/.vim/plugged/jedi-vim </span><br><span class="line">Plug <span class="string">'davidhalter/jedi-vim'</span> <span class="string">"有YCM这个不用</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="6-文件属性修改"><a href="#6-文件属性修改" class="headerlink" title="6.文件属性修改"></a>6.文件属性修改</h2><ul><li><p>chown更改文件所有权 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chown [-R] 账号名称 文件或目录  <span class="comment">#-R 递归将子目录下文件全部修改</span></span><br><span class="line">chown wang test.log <span class="comment">#仅更改用户为wang </span></span><br><span class="line">chown root:root test.log <span class="comment">#同时更改用户和组为root</span></span><br></pre></td></tr></table></figure></li><li><p>chmod更改权限</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用数字更改权限 r=4 w=2 x=1</span></span><br><span class="line">chmod <span class="number">777</span> file <span class="comment">#rwxrwxrwx</span></span><br><span class="line">chmod <span class="number">744</span> file <span class="comment">#rwxr--r--</span></span><br><span class="line"><span class="comment">#使用字母更改权限 用户(u)、组(g)、其他人(o)、所有用户(a)</span></span><br><span class="line"><span class="comment">#rwxrwxrwx</span></span><br><span class="line">chmod a-w file <span class="comment">#r-xr-xr-x</span></span><br><span class="line">chmod go-rwx file <span class="comment">#rwx------</span></span><br><span class="line"><span class="comment">#---------</span></span><br><span class="line">chmod ug+rx file <span class="comment">#r-xr-x---</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="7-rsync远程数据同步工具"><a href="#7-rsync远程数据同步工具" class="headerlink" title="7.rsync远程数据同步工具"></a>7.rsync远程数据同步工具</h2><blockquote><p>rsync命令是一个远程数据同步工具，可通过LAN/WAN快速同步多台主机间的文件。rsync使用所谓的“rsync算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快</p></blockquote><ul><li><p>rsync特点<br>1.可以镜像保存整个目录树和文件系统<br>2.可以保留原有的权限(permission,mode)，owner,group,时间(修改时间,modify time)，软硬链接，文件acl,文件属性(attributes)信息等<br>3.传输效率高，使用同步算法，只比较变化的<br>4.支持匿名传输，方便网站镜像；也可以做验证，加强安全</p></li><li><p>命令格式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rsync [OPTION] ... SRC DEST <span class="comment">#本地拷贝</span></span><br><span class="line">rsync [OPTION] ... SRC [user@]host:DEST <span class="comment">#本地push到远程，支持ssh</span></span><br><span class="line">rsync [OPTION] ...[user@]host:SRC  DEST <span class="comment">#远程pull到本地，支持ssh</span></span><br><span class="line">rsync [OPTION] ... SRC [user@]host::DEST <span class="comment">#通过服务的方式</span></span><br><span class="line">rsync [OPTION] ...[user@]host::SRC  DEST</span><br></pre></td></tr></table></figure></li><li><p>常用选项</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-a 包含-rtplgoD</span><br><span class="line">-r 同步目录时要加上，类似cp时的-r选项</span><br><span class="line">-v 同步时显示一些信息，让我们知道同步的过程</span><br><span class="line">-l 保留软连接</span><br><span class="line">-L 加上该选项后，同步软链接时会把源文件给同步</span><br><span class="line">-p 保持文件的权限属性</span><br><span class="line">-o 保持文件的属主</span><br><span class="line">-g 保持文件的属组</span><br><span class="line">-D 保持设备文件信息</span><br><span class="line">-t 保持文件的时间属性</span><br><span class="line">--delete 删除DEST中SRC没有的文件</span><br><span class="line">--exclude 过滤指定文件，如--exclude “logs”会把文件名包含logs的文件或者目录过滤掉，不同步</span><br><span class="line">-P 显示同步过程，比如速率，比-v更加详细</span><br><span class="line">-u 加上该选项后，如果DEST中的文件比SRC新，则不同步</span><br><span class="line">-z 传输时压缩</span><br></pre></td></tr></table></figure></li><li><p>常用命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#同步目录 注意”/“的差别</span></span><br><span class="line">rsync -avP /root/test/ /tmp/test_dest/</span><br><span class="line"><span class="comment">#删除目标中源文件里没有的内容</span></span><br><span class="line">rsync -avP --delete /root/test/ /tmp/test_dest/ </span><br><span class="line"><span class="comment">#过滤掉所有.txt文件</span></span><br><span class="line">rsync -avP --exclude  <span class="string">"*.txt"</span> /root/test/ /tmp/test_dest/ </span><br><span class="line"><span class="comment">#目标中的文件比源新，则不同步</span></span><br><span class="line">rsync -avu /root/test/ root@xx.xx.xx.xx:/test_dest/</span><br></pre></td></tr></table></figure></li><li><p>Linux系统与windows系统文件同步<br><a href="https://my.oschina.net/lanni654321/blog/369595" target="_blank" rel="noopener">https://my.oschina.net/lanni654321/blog/369595</a></p></li></ul><h2 id="8-启动和停止服务"><a href="#8-启动和停止服务" class="headerlink" title="8.启动和停止服务"></a>8.启动和停止服务</h2><ul><li>systemd<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl status sshd.service <span class="comment">#查看状态</span></span><br><span class="line">systemctl start sshd.service <span class="comment">#启动sshd</span></span><br><span class="line">systemctl enable sshd.service <span class="comment">#配置sshd自启动</span></span><br><span class="line">systemctl restart sshd.service <span class="comment">#重启一下sshd服务 </span></span><br><span class="line">systemctl enable/disable sshd.service <span class="comment">#设置开机启动</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[转载]真正厉害的人，早已戒掉了情绪</title>
      <link href="/posts/22da46cf.html"/>
      <url>/posts/22da46cf.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>戒掉情绪，你就成功了一半。</p></blockquote><a id="more"></a><p>01</p><p>都说成年人的世界，没有“容易”二字，连发泄情绪都要排个队。</p><p>工作上，遇到难题要想办法解决；生活上，孩子哭了要想办法逗乐；父母面前，需要你照顾的时候要想尽办法有求必应。</p><p>你不能在孩子嚎啕大哭的时候，跟着孩子一起哭，更不能在父母需要你的时候，丧气落泪。</p><p><strong>只有把这一切安顿之后，才能抽空发泄自己的情绪。</strong></p><p>对此我也深有体会，熟悉我的朋友会发现，我几乎不发朋友圈。</p><p>因为朋友圈不再是那个可以随时抒发心情的地方，就算实在想发，也要设置分组，认真思考，仔细筛选。如此麻烦，不如不发。</p><p>但是，在我看来，成年人小心翼翼的崩溃， <strong>除了身不由己，更多的其实是时间有限</strong> ，尤其是事业有成的成功人士，发泄情绪都得掐秒表。</p><p>自媒体人柳主任在一篇文章中提到，自从创业以来，自己已经戒掉了情绪，或者说变得特别克制自己不要放大负面情绪，不自怜，不沉浸在无用的情绪之中。她说：</p><p>印象中崩溃大哭的时候，三年多来只有三次。并且最近一次我还是定了个秒表，哭三分钟继续去干活。</p><p>在这样“一堆工作等着推进，客户等着约见”的工作节奏里，根本没时间崩溃，只能以最快的速度收拾好自己的情绪，继而干劲满满地投入工作。</p><p>普通人可能不理解这样的发泄方式，但这的确是许多牛人的真实写照。</p><p>大家熟知的演员杨幂，也是这样一个人，曾经被黑的体无完肤，最终却越挫越勇，稳坐当红花旦的位置。</p><p>在一次访谈中，她说：</p><p>我是一个对自己挺狠的人。而“被狠掉”的第一条，是情绪。“我早把情绪戒掉了”，就是和自己死磕，对自己下命令。</p><p>有一次，有件事让我很生气，我对自己说，给你二十四小时的时间，你必须把这件事压下去。这一天，什么都不做，让自己过去。</p><p>“杀不死我的只会让我更强大”，她用行动践行了这个道理。这样的姑娘，得到什么都不足为奇。</p><p>想起稻盛和夫说过的一句话：“ <strong>成功不要无谓的情绪。</strong> ”</p><p>深以为然。</p><p>02</p><p>为什么成功要戒掉情绪？ <strong>因为情绪会影响注意力，缺乏专注，工作效率就大打折扣</strong> 。</p><p>美国心理学家特瑞斯曼教授指出：“不专注时，人们只能对事物的个别特征进行初步加工；而在专注的情况下，则能精细加工，并将其整合为一个整体。也就是说，只有在专注的情况下，我们才能成功地完成手上的任务。”</p><p>心理学家齐克森米哈里在《心流：最佳体验的心理学》一书中提到这样一个案例：</p><p>在荷兰一家医院里，有一名患有精神分裂症的女性患者，住院已超过10年，思路不清、病况严重，一直以来都情绪淡漠。</p><p>医生在对她的跟踪记录里发现，她曾出现过两次情绪高亢的时候，而且正巧都是在修剪指甲时。</p><p>于是医生找来专业人员教她修剪指甲的相关技巧，而她也十分热衷于学习。</p><p>没过多久，她就开始替病友修整指甲。此后，她的性格发生了180度转变，没多久就出院了。</p><p>后来，她在家门口开了一家店，挂起招牌，不到一年就能自力更生了。</p><p>这个案例说明， <strong>把注意力投入在一件喜爱的事情上，是有疗愈功效的。它能让原本趋于混乱的精神能量变得有秩序，让人重拾生活的热情和意义</strong> 。</p><p>这就是 <strong>心流</strong> 的力量。</p><p><strong>心流，是一种将个人的精神力，完全投注在某种活动上的感觉</strong> 。</p><p>心流产生时，会有高度的兴奋及充实感，会感到内心的纯净，对手头任务充满自信。</p><p>同时很难感觉到时间的流逝，等到结束时发现几个小时已经过去了。</p><p><strong>当一个人处在心流的状态下，大脑活动的方式，会体现出高效率和准确性，耗费的能量也较少。</strong></p><p>然而， <strong>激发心流的重要条件之一，就是要做到专注</strong> 。</p><p>如果注意力被负面情绪分走了一大半，就不可能产生这种体验。当然，这里说的情绪主要指的是负面情绪。</p><p>可见， <strong>戒掉负面情绪，你就成功了一半。</strong></p><p>03</p><p>人生在世，难免有这样那样的负面情绪，保证自己的情绪不受外界的困扰，才能提升专注力，掌控好自己的工作和生活。</p><p>那么， <strong>如何才能戒掉自己的负面情绪？</strong></p><p>台湾心理咨询师陈志恒介绍了一个方法： <strong>将同理心用在自己身上</strong> 。</p><p>他认为，同理心是心理助人中使用较多的一个技巧，即 <strong>在充分理解对方处境的前提下，主动将对方的情绪感受表达出来，让对方知道。</strong></p><p>这种方法用于情绪低落、沮丧的人时，往往有相当大的杀伤力。而用在自己身上，也是效果卓然。</p><p>因此，当负面情绪袭来时，别急着告诉自己“冷静”，或者“这种情绪不对，我得克服”，而是先找个地方，沉下心来，静静地感受下自己的内心状态，低声对自己说出自己的情绪，告诉自己：</p><p><strong>我知道我正在生气/委屈/自卑……谢谢你用这种方式让我知道我的感觉。</strong></p><p><strong>不要批判、否定，就只是简简单单地描述。</strong></p><p>当你觉察到，并心平气和地接受了自己的负面情绪时，就会发现，你的情绪已经平稳了许多，可以开始冷静地思考了。</p><p>因为 <strong>觉察本身，就是一种疗愈</strong> 。</p><p>心理学上有个名词叫“ <strong>正念疗法</strong> ”，说的就是这种方法。</p><p>用正念来排解负面情绪，其原理就是 <strong>通过有意图的、不带评判的、对当下的关注或觉察来达到目的。</strong></p><p>被负面情绪淹没时，试着给自己3分钟不被打扰的时间，把注意力放在呼吸上，发现自己走神时，深吸一口气，同时把注意力带回来，重新放在呼吸上。</p><p>不断重复做这个简单的尝试，直到你走神的次数变得越来越少，专注的时间变得越来越长。</p><p>坚持这样的练习，不仅能够戒掉情绪，还能敏锐地在第一时间察觉到，自己的注意力是如何飘走的。</p><p><strong>戒掉情绪后，你就会收获一个强大的自己。</strong></p><p>《一生的资本》里有这样一段话：</p><p><strong>任何时候，一个人都不应该做自己情绪的奴隶</strong> ，不应该使一切行动都受制于自己的情绪，而应该反过来控制情绪。</p><p>无论境况多么糟糕，你应该努力去支配你的环境，把自己从黑暗中拯救出来。</p><p><strong>那些扰乱你的、让你崩溃的、害怕的、恐惧的事情，在你充实的生活和忙碌里，真的不值一提</strong> 。</p><p><strong>熬过痛苦的黑夜，天亮后你就是英雄</strong> 。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7部署GateOne</title>
      <link href="/posts/aa509fdc.html"/>
      <url>/posts/aa509fdc.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Gate One is an HTML5-powered terminal emulator and SSH client<br><a href="https://github.com/liftoff/GateOne" target="_blank" rel="noopener">官网 https://github.com/liftoff/GateOne</a></p></blockquote><a id="more"></a><h2 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/liftoff/GateOne.git</span><br></pre></td></tr></table></figure><p>or 下载从github下载压缩包，解压缩<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip GateOne-<span class="literal">master</span>.zip *<span class="comment">#工具：yum install -y unzip zip*</span></span><br></pre></td></tr></table></figure></p><h2 id="2-所需组件"><a href="#2-所需组件" class="headerlink" title="2. 所需组件"></a>2. 所需组件</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="keyword">install</span> gcc python-devel </span><br><span class="line">sudo pip <span class="keyword">install</span> tornado==<span class="number">4.5</span>.<span class="number">3</span></span><br><span class="line">sudo pip <span class="keyword">install</span> html5lib</span><br></pre></td></tr></table></figure><p>备注：gcc python-devel需要安装；注意回显log，缺少相关包会有错误提示</p><h2 id="3-安装"><a href="#3-安装" class="headerlink" title="3. 安装"></a>3. 安装</h2><p>备注：python2.7安装,python3安没成功没注意少什么组件<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd GateOne-<span class="literal">master</span></span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure></p><h2 id="4-第一次启动"><a href="#4-第一次启动" class="headerlink" title="4. 第一次启动"></a>4. 第一次启动</h2><p>默认启动只能本地访问，端口443<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">gateone</span></span><br></pre></td></tr></table></figure></p><p>启动报错：这是用tornado 5.1.1时的报错，需要更换tornado 4.5.3</p><h2 id="5-修改配置"><a href="#5-修改配置" class="headerlink" title="5. 修改配置"></a>5. 修改配置</h2><p>gateone第一次运行后在/etc/gateone下产生配置文件,修改10server.conf<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/gateone/conf.d </span><br><span class="line">vim <span class="number">10</span>server.conf</span><br><span class="line"></span><br><span class="line">// This <span class="keyword">is</span> Gate One<span class="string">'s main settings file.</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">    // "gateone" server-wide settings fall under "*"</span></span><br><span class="line"><span class="string">    "*": &#123;</span></span><br><span class="line"><span class="string">        "gateone": &#123; // These settings apply to all of Gate One</span></span><br><span class="line"><span class="string">            "address": "",</span></span><br><span class="line"><span class="string">            "ca_certs": null,</span></span><br><span class="line"><span class="string">            "cache_dir": "/tmp/gateone_cache",</span></span><br><span class="line"><span class="string">            "certificate": "/etc/gateone/ssl/certificate.pem",</span></span><br><span class="line"><span class="string">            "cookie_secret": "NmJmNzQwODRjZjRlNGQ0NGI2NzMwMzZhZDM2NGE0YWYxO",</span></span><br><span class="line"><span class="string">            "debug": false,</span></span><br><span class="line"><span class="string">            "disable_ssl": true, #改为true，不用https</span></span><br><span class="line"><span class="string">            "embedded": true, #改为true，允许嵌入到网站中</span></span><br><span class="line"><span class="string">            "enable_unix_socket": false,</span></span><br><span class="line"><span class="string">            "gid": "0",</span></span><br><span class="line"><span class="string">            "https_redirect": false,</span></span><br><span class="line"><span class="string">            "js_init": "",</span></span><br><span class="line"><span class="string">            "keyfile": "/etc/gateone/ssl/keyfile.pem",</span></span><br><span class="line"><span class="string">            "locale": "en_US",</span></span><br><span class="line"><span class="string">            "log_file_max_size": 100000000,</span></span><br><span class="line"><span class="string">            "log_file_num_backups": 10,</span></span><br><span class="line"><span class="string">            "log_file_prefix": "/var/log/gateone/gateone.log",</span></span><br><span class="line"><span class="string">            "log_rotate_interval": 1,</span></span><br><span class="line"><span class="string">            "log_rotate_mode": "size",</span></span><br><span class="line"><span class="string">            "log_rotate_when": "midnight",</span></span><br><span class="line"><span class="string">            "log_to_stderr": null,</span></span><br><span class="line"><span class="string">            "logging": "info",</span></span><br><span class="line"><span class="string">            "multiprocessing_workers": null,</span></span><br><span class="line"><span class="string">            "origins": ["localhost", "127.0.0.1", "aliyun", "172.31.1.xxx","xxx.xxx.xxx.xxx"], #加入大网ip</span></span><br><span class="line"><span class="string">            "pid_file": "/var/run/gateone.pid",</span></span><br><span class="line"><span class="string">            "port": 8080, #端口号</span></span><br><span class="line"><span class="string">            "session_dir": "/tmp/gateone",</span></span><br><span class="line"><span class="string">            "session_timeout": "5d",</span></span><br><span class="line"><span class="string">            "syslog_facility": "daemon",</span></span><br><span class="line"><span class="string">            "uid": "0",</span></span><br><span class="line"><span class="string">            "unix_socket_mode": "0600",</span></span><br><span class="line"><span class="string">            "unix_socket_path": "/tmp/gateone.sock",</span></span><br><span class="line"><span class="string">            "url_prefix": "/",</span></span><br><span class="line"><span class="string">            "user_dir": "/var/lib/gateone/users",</span></span><br><span class="line"><span class="string">            "user_logs_max_age": "30d"</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></p><p>备注：gateone 1.2.0版本不再copy文件到/opt/gateone</p><h2 id="6-后台运行"><a href="#6-后台运行" class="headerlink" title="6. 后台运行"></a>6. 后台运行</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service gateone start</span><br></pre></td></tr></table></figure><h2 id="7-设置开启自启动"><a href="#7-设置开启自启动" class="headerlink" title="7. 设置开启自启动"></a>7. 设置开启自启动</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sysVinit方式</span></span><br><span class="line">chmod +x /etc/rc.d/rc.local</span><br><span class="line">vim /etc/rc.d/rc.local</span><br><span class="line">添加 service gateone start</span><br><span class="line"><span class="comment">#systemd方式</span></span><br><span class="line">systemctl enable gateone.service</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7部署Nginx</title>
      <link href="/posts/d47303b5.html"/>
      <url>/posts/d47303b5.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。</p></blockquote><a id="more"></a><h2 id="1-安装依赖包"><a href="#1-安装依赖包" class="headerlink" title="1.安装依赖包"></a>1.安装依赖包</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install openssl <span class="comment">#安装openssl库</span></span><br><span class="line">yum install zlib <span class="comment">#安装zlib库</span></span><br><span class="line">yum install pcre <span class="comment">#安装pcre库</span></span><br></pre></td></tr></table></figure><h2 id="2-安装Nginx依赖项和Nginx"><a href="#2-安装Nginx依赖项和Nginx" class="headerlink" title="2.安装Nginx依赖项和Nginx"></a>2.安装Nginx依赖项和Nginx</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh http://nginx.org/packages/centos/<span class="number">7</span>/noarch/RPMS/nginx-release-centos<span class="number">-7</span><span class="number">-0.</span>el7.ngx.noarch.rpm </span><br><span class="line">yum install nginx</span><br></pre></td></tr></table></figure><h2 id="3-启动Nginx"><a href="#3-启动Nginx" class="headerlink" title="3.启动Nginx"></a>3.启动Nginx</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service nginx start <span class="comment">#启动Nginx</span></span><br><span class="line">service nginx restart <span class="comment">#重启Nginx</span></span><br></pre></td></tr></table></figure><h2 id="4-配置开机启动"><a href="#4-配置开机启动" class="headerlink" title="4.配置开机启动"></a>4.配置开机启动</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sysVinit方式</span></span><br><span class="line">chmod +x /etc/rc.d/rc.local</span><br><span class="line">vim /etc/rc.d/rc.local</span><br><span class="line">添加 service nginx start</span><br><span class="line"><span class="comment">#systemd方式</span></span><br><span class="line">systemctl enable nginx.service</span><br></pre></td></tr></table></figure><h2 id="5-配置config"><a href="#5-配置config" class="headerlink" title="5.配置config"></a>5.配置config</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/nginx/conf.d/default.conf</span><br><span class="line"> </span><br><span class="line">server &#123;</span><br><span class="line">    listen       <span class="number">80</span>;</span><br><span class="line">    server_name  <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>;</span><br><span class="line">    root /root/web/blog; <span class="comment">#nginx的根目录默认/usr/share/nginx/html/下，修改访问目录</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#charset koi8-r;</span></span><br><span class="line">    <span class="comment">#access_log  /var/log/nginx/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /root/web/blog; <span class="comment">#修改访问目录</span></span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    error_page   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">50</span>x.html;</span><br><span class="line">    location = /<span class="number">50</span>x.html &#123;</span><br><span class="line">        root   /root/web/blog; <span class="comment">#修改访问目录</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">    <span class="comment">#    root           html;</span></span><br><span class="line">    <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">    <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">    <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">    <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">    <span class="comment"># concurs with nginx's one</span></span><br><span class="line">    <span class="comment">#</span></span><br><span class="line">    <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">    <span class="comment">#    deny  all;</span></span><br><span class="line">    <span class="comment">#&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python3安装</title>
      <link href="/posts/f95eec4f.html"/>
      <url>/posts/f95eec4f.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>ubuntu、centos、macOS 以及 windows系统下的python3安装</p></blockquote><a id="more"></a><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><ul><li><p>查看版本： </p><pre><code>python --verison python3 --version </code></pre></li><li><p>ubuntu安装：<br>使用deadsnakes，它让安装多个版本更容易 </p><pre><code>sudo add-apt-repository ppa:fkrull/deadsnakes sudo apt-get update sudo apt-get install python3.6 </code></pre></li><li>centos安装：<br>yum不支持，需要下载源码安装 <pre><code class="python"><span class="comment">#安装依赖 </span>yum -y groupinstall <span class="string">"Development tools"</span> yum -y install zlib-devel openssl-devel <span class="comment">#一个比较重要的包（不装的话，python3.7安装会报错） </span>yum install libffi-devel -y <span class="comment">#下载 </span>wget https://www.python.org/ftp/python/<span class="number">3.7</span><span class="number">.1</span>/Python<span class="number">-3.7</span><span class="number">.1</span>.tar.xz <span class="comment">#解压安装 </span>tar -xvJf Python<span class="number">-3.7</span><span class="number">.1</span>.tar.xz cd Python<span class="number">-3.6</span><span class="number">.6</span> ./configure --prefix=/usr/local/bin/python3 sudo make sudo make install <span class="comment">#创建软链接 </span>sudo ln -s /usr/local/bin/python3/bin/python3 /usr/bin/python3 sudo ln -s /usr/local/bin/python3/bin/pip3 /usr/bin/pip3 </code></pre></li></ul><h2 id="OS-X"><a href="#OS-X" class="headerlink" title="OS X"></a>OS X</h2><ul><li><p>查看版本： </p><pre><code>python --verison python3 --version </code></pre></li><li><p>安装<br>安装Homebrew,brew依赖于Xcode </p><pre><code class="python"><span class="comment">#一般都自带 </span>xcode-select --install <span class="comment">#安装homebrew </span>/usr/bin/ruby -e <span class="string">"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span> <span class="comment">#检查homebrew </span>brew doctor <span class="comment">#安装python </span>brew install python3 </code></pre></li><li>homebrew用法 <pre><code class="python">搜索软件：brew search 软件名，如brew search wget 安装软件：brew install 软件名，如brew install wget 卸载软件：brew remove 软件名，如brew remove wget brew list 列出已安装的软件 brew update 更新brew brew home 用浏览器打开brew的官方网站 brew info 显示软件信息 brew deps 显示包依赖 brew -v brew -h </code></pre></li></ul><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><ul><li><p>检查版本： </p><pre><code>CMD下： python --version or 直接python尝试进入 </code></pre></li><li><p>安装： </p><pre><code>#官网下载，安装时选择Add Python to PATH http://python.org/downloads/ </code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
