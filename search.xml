<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[新装linux系统配置]]></title>
    <url>%2Flinux%2F%E6%96%B0%E8%A3%85linux%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[配置hostname、升级组件、安装zsh oh-my-zsh、vim插件vimplus安装等 centos7 修改hostname [root@centos7 ~]$ hostnamectl set-hostname centos7 # 使用这个命令会立即生效且重启也生效 其他版本参考：https://www.cnblogs.com/zhaojiedi1992/p/zhaojiedi_linux_043_hostname.html 升级组件 yum upgrade yum update 安装vim yum -y install vim #默认就能用，不用在替换 #yum remove vim 查看系统版本 yum update #升级 lsb_release -a #如果没有lsb yum install redhat-lsb -y ubuntu 无法使用ifconfig sudo apt-get install net-tools 软件升级 sudo apt-get update # 升级安装包相关的命令,刷新可安装的软件列表(但是不做任何实际的安装动作) sudo apt-get upgrade # 进行安装包的更新(软件版本的升级) sudo apt-get dist-upgrade # 进行系统版本的升级(Ubuntu版本的升级) sudo do-release-upgrade # Ubuntu官方推荐的系统升级方式,若加参数-d还可以升级到开发版本,但会不稳定 vi下删除键和上下左右键的异常解决 # 下载完整vim即可解决： sudo apt-get remove vim-common sudo apt-get install vim-gtk #安装vim 开启ssh sudo apt-get update #更新源列表 sudo apt-get install openssh-server #安装openssh-server sudo ps -e |grep ssh #查看ssh服务是否启动，有sshd说明已经启动，如果没有启动，输入"sudo service ssh start"启动。 查看系统版本 lsb_release -a 添加新用户 centos7 禁止root账号登陆 $ vi /etc/ssh/sshd.conf #ssh服务的配置文件，直接修改 PermitRootLogin no #找到这一行，并将其改为 no 保存退出 $ systemctl restart sshd #重启一下sshd服务 创建用户并授权 $ adduser sss #创建用户sss $ passwd sss #创建sss的密码 $ chmod -v u+w /etc/sudoers #增加 sudoers 文件的写的权限，默认为只读 $ vi /etc/sudoers #修改 sudoers root ALL=(ALL) ALL sss ALL=(ALL) ALL #添加这一行 保存，退出 $ chmod -v u-w /etc/sudoers #删除 sudoers 的写的权限# 安装zsh oh-my-zsh 查看当前安装了多少shell cat /etc/shells 确认当前shell echo $SHELL 安装zsh sudo apt-get install zsh 切换zsh chsh -s `which zsh` #之后注销重新登录 chsh -s /bin/zsh # 切回bash chsh -s /bin/bash 安装oh-my-zshhttps://github.com/robbyrussell/oh-my-zsh #使用curl方式安装： sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)" 配置主题配置主题, 可以通过修改~/.zshrc中的环境变量ZSH_THEME来完成 ZSH_THEME="robbyrussell" #默认主题，简洁但是不显示路径 更换agnoster主题： ZSH_THEME="agnoster" #这个主题需要Powerline字体 powerline字体安装：https://github.com/powerline/fonts git clone https://github.com/powerline/fonts.git cd fonts ./install.sh 隐藏[user@hostname] 在~/.zshrc中添加 DEFAULT_USER="username" #ssh的时候没用？ 配置插件推荐一：（zsh-autosuggestions历史命令智能提示插件） git clone https://github.com/zsh-users/zsh-autosuggestions.git $ZSH_CUSTOM/plugins/zsh-autosuggestions 推荐二：（zsh-syntax-highlighting命令行代码高亮插件） git clone https://github.com/zsh-users/zsh-syntax-highlighting.git $ZSH_CUSTOM/plugins/zsh-syntax-highlighting 插件生效 vim ~/.zshrc plugins=( git zsh-autosuggestions zsh-syntax-highlighting ) vim插件：vimplus安装 vimplus(在当前用户下安装只能在当前用户使用)安装之后vim更新为8.1 git clone https://github.com/chxuan/vimplus.git ~/.vimplus cd ~/.vimplus ./install.sh 参考：https://github.com/chxuan/vimplus 安装jediYCM对python的只是需要安装jedi pip install jedi 补充vim插件编辑.vimrc，增加下列插件，并安装 Plug 'Yggdroot/indentLine' "缩进指示线 Plug 'tell-k/vim-autopep8' "需要pip install autopep8 YouCompleteMe假如一些正常的话，等上面的命令执行完毕之后就算是完成了，但是很多时候，会在下载YouCompleteMe出错，这里需要手动的单独去安装这个插件vimplus安装时需要访问外国网站，由于网络原因，可能会失败，安装成功也要1个多小时，ycm插件有200M左右，下载比较耗时，这里有下载好的YouCompleteMe.tar.gz文件下载后解压到~/.vim/plugged/目录，并进入YouCompleteMe目录，linux用户执行./install.py —clang-completer，mac用户执行./install.py —clang-completer —system-libclang即可安装。 rm -rf ~/.vim/plugged/YouCompleteMe cd ~/.vim/plugged #解压到此目录下 cd YouCompleteMe ./install.py --clang-completer 备注：jedi-vim插件 git clone --recursive https://github.com/davidhalter/jedi-vim.git ~/.vim/plugged/jedi-vim Plug 'davidhalter/jedi-vim' "有YCM这个不用 linux 文件修改所有者/用户组 1. linux下修改文件用户组chgrp： change group的简写，修改文件所属的用户组 chgrp users test.log 修改后查看 ls -l -rwxrwx--- 1 work users 0 Jun 8 15:46 test.log 如果要修改该目录下所有文件和目录，使用-R参数 chgrp -R users test 要被改变的group名，必须在 /etc/group 文件中。/etc/group文件记录系统中所有的组名称。 2. linux下修改文件所有者chown ：change owner的简写， 修改文件的所有者 chown [-R] 账号名称 文件或目录 -R 递归，将子目录下文件全部修改。将文件所有者修改bin chown bin test.log 修改的用户必须在/etc/passwd文件中/etc/passwd记录用户信息。chown还可以修改组名称 chown root:root test.log 将所有者和组名称都修改为root。]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[转载]真正厉害的人，早已戒掉了情绪]]></title>
    <url>%2F%E9%B8%A1%E6%B1%A4%2F%E8%BD%AC%E8%BD%BD-%E7%9C%9F%E6%AD%A3%E5%8E%89%E5%AE%B3%E7%9A%84%E4%BA%BA%EF%BC%8C%E6%97%A9%E5%B7%B2%E6%88%92%E6%8E%89%E4%BA%86%E6%83%85%E7%BB%AA%2F</url>
    <content type="text"><![CDATA[戒掉情绪，你就成功了一半。 01 都说成年人的世界，没有“容易”二字，连发泄情绪都要排个队。 工作上，遇到难题要想办法解决；生活上，孩子哭了要想办法逗乐；父母面前，需要你照顾的时候要想尽办法有求必应。 你不能在孩子嚎啕大哭的时候，跟着孩子一起哭，更不能在父母需要你的时候，丧气落泪。 只有把这一切安顿之后，才能抽空发泄自己的情绪。 对此我也深有体会，熟悉我的朋友会发现，我几乎不发朋友圈。 因为朋友圈不再是那个可以随时抒发心情的地方，就算实在想发，也要设置分组，认真思考，仔细筛选。如此麻烦，不如不发。 但是，在我看来，成年人小心翼翼的崩溃， 除了身不由己，更多的其实是时间有限 ，尤其是事业有成的成功人士，发泄情绪都得掐秒表。 自媒体人柳主任在一篇文章中提到，自从创业以来，自己已经戒掉了情绪，或者说变得特别克制自己不要放大负面情绪，不自怜，不沉浸在无用的情绪之中。她说： 印象中崩溃大哭的时候，三年多来只有三次。并且最近一次我还是定了个秒表，哭三分钟继续去干活。 在这样“一堆工作等着推进，客户等着约见”的工作节奏里，根本没时间崩溃，只能以最快的速度收拾好自己的情绪，继而干劲满满地投入工作。 普通人可能不理解这样的发泄方式，但这的确是许多牛人的真实写照。 大家熟知的演员杨幂，也是这样一个人，曾经被黑的体无完肤，最终却越挫越勇，稳坐当红花旦的位置。 在一次访谈中，她说： 我是一个对自己挺狠的人。而“被狠掉”的第一条，是情绪。“我早把情绪戒掉了”，就是和自己死磕，对自己下命令。 有一次，有件事让我很生气，我对自己说，给你二十四小时的时间，你必须把这件事压下去。这一天，什么都不做，让自己过去。 “杀不死我的只会让我更强大”，她用行动践行了这个道理。这样的姑娘，得到什么都不足为奇。 想起稻盛和夫说过的一句话：“ 成功不要无谓的情绪。 ” 深以为然。 02 为什么成功要戒掉情绪？ 因为情绪会影响注意力，缺乏专注，工作效率就大打折扣 。 美国心理学家特瑞斯曼教授指出：“不专注时，人们只能对事物的个别特征进行初步加工；而在专注的情况下，则能精细加工，并将其整合为一个整体。也就是说，只有在专注的情况下，我们才能成功地完成手上的任务。” 心理学家齐克森米哈里在《心流：最佳体验的心理学》一书中提到这样一个案例： 在荷兰一家医院里，有一名患有精神分裂症的女性患者，住院已超过10年，思路不清、病况严重，一直以来都情绪淡漠。 医生在对她的跟踪记录里发现，她曾出现过两次情绪高亢的时候，而且正巧都是在修剪指甲时。 于是医生找来专业人员教她修剪指甲的相关技巧，而她也十分热衷于学习。 没过多久，她就开始替病友修整指甲。此后，她的性格发生了180度转变，没多久就出院了。 后来，她在家门口开了一家店，挂起招牌，不到一年就能自力更生了。 这个案例说明， 把注意力投入在一件喜爱的事情上，是有疗愈功效的。它能让原本趋于混乱的精神能量变得有秩序，让人重拾生活的热情和意义 。 这就是 心流 的力量。 心流，是一种将个人的精神力，完全投注在某种活动上的感觉 。 心流产生时，会有高度的兴奋及充实感，会感到内心的纯净，对手头任务充满自信。 同时很难感觉到时间的流逝，等到结束时发现几个小时已经过去了。 当一个人处在心流的状态下，大脑活动的方式，会体现出高效率和准确性，耗费的能量也较少。 然而， 激发心流的重要条件之一，就是要做到专注 。 如果注意力被负面情绪分走了一大半，就不可能产生这种体验。当然，这里说的情绪主要指的是负面情绪。 可见， 戒掉负面情绪，你就成功了一半。 03 人生在世，难免有这样那样的负面情绪，保证自己的情绪不受外界的困扰，才能提升专注力，掌控好自己的工作和生活。 那么， 如何才能戒掉自己的负面情绪？ 台湾心理咨询师陈志恒介绍了一个方法： 将同理心用在自己身上 。 他认为，同理心是心理助人中使用较多的一个技巧，即 在充分理解对方处境的前提下，主动将对方的情绪感受表达出来，让对方知道。 这种方法用于情绪低落、沮丧的人时，往往有相当大的杀伤力。而用在自己身上，也是效果卓然。 因此，当负面情绪袭来时，别急着告诉自己“冷静”，或者“这种情绪不对，我得克服”，而是先找个地方，沉下心来，静静地感受下自己的内心状态，低声对自己说出自己的情绪，告诉自己： 我知道我正在生气/委屈/自卑……谢谢你用这种方式让我知道我的感觉。 不要批判、否定，就只是简简单单地描述。 当你觉察到，并心平气和地接受了自己的负面情绪时，就会发现，你的情绪已经平稳了许多，可以开始冷静地思考了。 因为 觉察本身，就是一种疗愈 。 心理学上有个名词叫“ 正念疗法 ”，说的就是这种方法。 用正念来排解负面情绪，其原理就是 通过有意图的、不带评判的、对当下的关注或觉察来达到目的。 被负面情绪淹没时，试着给自己3分钟不被打扰的时间，把注意力放在呼吸上，发现自己走神时，深吸一口气，同时把注意力带回来，重新放在呼吸上。 不断重复做这个简单的尝试，直到你走神的次数变得越来越少，专注的时间变得越来越长。 坚持这样的练习，不仅能够戒掉情绪，还能敏锐地在第一时间察觉到，自己的注意力是如何飘走的。 戒掉情绪后，你就会收获一个强大的自己。 《一生的资本》里有这样一段话： 任何时候，一个人都不应该做自己情绪的奴隶 ，不应该使一切行动都受制于自己的情绪，而应该反过来控制情绪。 无论境况多么糟糕，你应该努力去支配你的环境，把自己从黑暗中拯救出来。 那些扰乱你的、让你崩溃的、害怕的、恐惧的事情，在你充实的生活和忙碌里，真的不值一提 。 熬过痛苦的黑夜，天亮后你就是英雄 。]]></content>
      <categories>
        <category>鸡汤</category>
      </categories>
      <tags>
        <tag>鸡汤</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS7部署GateOne]]></title>
    <url>%2Flinux%2FCentOS7%E9%83%A8%E7%BD%B2GateOne%2F</url>
    <content type="text"><![CDATA[Gate One is an HTML5-powered terminal emulator and SSH client官网 https://github.com/liftoff/GateOne 1.下载1git clone https://github.com/liftoff/GateOne.git or 下载从github下载压缩包，解压缩1unzip GateOne-master.zip *#工具：yum install -y unzip zip* 2. 所需组件123sudo yum install gcc python-devel sudo pip install tornado==4.5.3sudo pip install html5lib 备注：gcc python-devel需要安装；注意回显log，缺少相关包会有错误提示 3. 安装备注：python2.7安装,python3安没成功没注意少什么组件12cd GateOne-masterpython setup.py install 4. 第一次启动默认启动只能本地访问，端口4431gateone 启动报错：这是用tornado 5.1.1时的报错，需要更换tornado 4.5.3 5. 修改配置gateone第一次运行后在/etc/gateone下产生配置文件,修改10server.conf12345678910111213141516171819202122232425262728293031323334353637383940414243444546cd /etc/gateone/conf.d vim 10server.conf// This is Gate One's main settings file.&#123; // "gateone" server-wide settings fall under "*" "*": &#123; "gateone": &#123; // These settings apply to all of Gate One "address": "", "ca_certs": null, "cache_dir": "/tmp/gateone_cache", "certificate": "/etc/gateone/ssl/certificate.pem", "cookie_secret": "NmJmNzQwODRjZjRlNGQ0NGI2NzMwMzZhZDM2NGE0YWYxO", "debug": false, "disable_ssl": true, #改为true，不用https "embedded": true, #改为true，允许嵌入到网站中 "enable_unix_socket": false, "gid": "0", "https_redirect": false, "js_init": "", "keyfile": "/etc/gateone/ssl/keyfile.pem", "locale": "en_US", "log_file_max_size": 100000000, "log_file_num_backups": 10, "log_file_prefix": "/var/log/gateone/gateone.log", "log_rotate_interval": 1, "log_rotate_mode": "size", "log_rotate_when": "midnight", "log_to_stderr": null, "logging": "info", "multiprocessing_workers": null, "origins": ["localhost", "127.0.0.1", "aliyun", "172.31.1.xxx","xxx.xxx.xxx.xxx"], #加入大网ip "pid_file": "/var/run/gateone.pid", "port": 8080, #端口号 "session_dir": "/tmp/gateone", "session_timeout": "5d", "syslog_facility": "daemon", "uid": "0", "unix_socket_mode": "0600", "unix_socket_path": "/tmp/gateone.sock", "url_prefix": "/", "user_dir": "/var/lib/gateone/users", "user_logs_max_age": "30d" &#125; &#125;&#125; 备注：gateone 1.2.0版本不再copy文件到/opt/gateone 6. 后台运行1service gateone start 7. 设置开启自启动123chmod +x /etc/rc.d/rc.localvim /etc/rc.d/rc.local添加 service gateone start]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CentOS7部署Nginx]]></title>
    <url>%2Flinux%2FCentOS7%E9%83%A8%E7%BD%B2Nginx%2F</url>
    <content type="text"><![CDATA[Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上nginx的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。 1.安装依赖包123yum install openssl #安装openssl库yum install zlib #安装zlib库yum install pcre #安装pcre库 2.安装Nginx依赖项和Nginx12rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm yum install nginx 3.启动Nginx12service nginx start #启动Nginxservice nginx restart #重启Nginx 4.配置开机启动123chmod +x /etc/rc.d/rc.localvim /etc/rc.d/rc.local添加 service nginx start 5.配置config1234567891011121314151617181920212223242526272829303132333435363738394041424344454647vim /etc/nginx/conf.d/default.conf server &#123; listen 80; server_name 0.0.0.0; root /root/web/blog; #nginx的根目录默认/usr/share/nginx/html/下，修改访问目录 #charset koi8-r; #access_log /var/log/nginx/host.access.log main; location / &#123; root /root/web/blog; #修改访问目录 index index.html index.htm; &#125; #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root /root/web/blog; #修改访问目录 &#125; # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \.php$ &#123; # proxy_pass http://127.0.0.1; #&#125; # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \.php$ &#123; # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #&#125; # deny access to .htaccess files, if Apache's document root # concurs with nginx's one # #location ~ /\.ht &#123; # deny all; #&#125;&#125;]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python脚本:处理日志文件]]></title>
    <url>%2Fpython%2Fpython-script-%E5%A4%84%E7%90%86%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[实现从设备操作日志中提取命令行信息、简化打印，便于查看、提高效率 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118 # -*- coding: UTF-8 -*-'''解析操作日志，提取时间信息和命令行'''import osimport sysimport reimport timedef input_any_exit(): try: input("\r\nEnter any key to exit... ") finally: sys.exit(0)def check_file(): print("&gt;&gt;&gt;请将操作日志重命名为cmd.log放在当前目录下") while True: input("Enter any key to continue... ") file ="cmd.log" if os.path.isfile(file): return file else: print("&gt;&gt;&gt;Error: 当前目录下未找到%s文件!"%(file))def get_file(file): f =open(file,"r") log =f.read() log_list =log.split('StartTime') list = [] for cmd in log_list: #cmd = 'StartTime' + i re_list=[r'\r\n',r'\r',r'\n'] for r in re_list: cmd = re.sub(r,"",cmd) cmd = cmd + "\n" # 在结尾加换行符 #print(cmd) list.append(cmd) f.close() return listdef which_run(file): print("a:提取时间戳和命令行") print("b:提取命令行") num = input("which one(a/b):").lower() if num == 'a': run_time(get_file(file),file) elif num == 'b': run_cmd(get_file(file),file) else: which_run(file)def delete_login(list): while True: yes_or_no = input("是否清除'/--- * ----/'信息[y/n]:").lower() if yes_or_no == 'y': list_new=[] for i in list: if i.find("/---") == -1: list_new.append(i) return list_new elif yes_or_no == 'n': return listdef delete_show(list): while True: yes_or_no=input("是否清除show命令[y/n]:").lower() if yes_or_no == 'y': list_new=[] for i in list: if i.find("show") == -1: list_new.append(i) return list_new elif yes_or_no == 'n': return listdef run_cmd(list,file): print("&gt;&gt;&gt;提取命令行") list_new =delete_login(list) list_new =delete_show(list_new) time_now = time.strftime("%Y-%m-%d_%H-%M", time.localtime()) filename=file.split(".")[0]+"_cmd_&#123;&#125;.log".format(time_now) f = open(filename, "w") for i in list_new: cmd =i.split('CMDLine: ')[-1] f.write(cmd) f.close() print("&gt;&gt;&gt;执行完毕，输出%s"%(filename))def run_time(list,file): print("&gt;&gt;&gt;提取时间戳和命令行") list_new = delete_login(list) list_new = delete_show(list_new) time_now = time.strftime("%Y-%m-%d_%H-%M", time.localtime()) filename=file.split(".")[0]+"_time_&#123;&#125;.log".format(time_now) f = open(filename, "w") for i in list_new: mat = re.findall(r"(\d&#123;1,2&#125;:\d&#123;1,2&#125;:\d&#123;1,2&#125;\s\d&#123;1,2&#125;-\d&#123;1,2&#125;-\d&#123;4&#125;)", i) cmd1 =" ".join(mat) #cmd1 =i.split('FlowID:')[0] cmd2 =i.split('CMDLine: ')[-1] cmd =cmd1+" "+cmd2 f.write(cmd) f.close() print("&gt;&gt;&gt;执行完毕，输出%s"%(filename))if __name__ == '__main__': print("******** Welcome to use this tool! ********") try: which_run(check_file()) except (Exception) as e: print(e) finally: input_any_exit()]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[python3安装]]></title>
    <url>%2Fpython%2Fpython3%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[ubuntu、centos、macOS 以及 windows系统下的python3安装 Linux 查看版本： python --verison python3 --version ubuntu安装：使用deadsnakes，它让安装多个版本更容易 sudo add-apt-repository ppa:fkrull/deadsnakes sudo apt-get update sudo apt-get install python3.6 centos安装：yum不支持，需要下载源码安装 #安装依赖 yum -y groupinstall "Development tools" yum -y install zlib-devel openssl-devel #一个比较重要的包（不装的话，python3.7安装会报错） yum install libffi-devel -y #下载 wget https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tar.xz #解压安装 tar -xvJf Python-3.7.1.tar.xz cd Python-3.6.6 ./configure --prefix=/usr/local/bin/python3 sudo make sudo make install #创建软链接 sudo ln -s /usr/local/bin/python3/bin/python3 /usr/bin/python3 sudo ln -s /usr/local/bin/python3/bin/pip3 /usr/bin/pip3 OS X 查看版本： python --verison python3 --version 安装安装Homebrew,brew依赖于Xcode #一般都自带 xcode-select --install #安装homebrew /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" #检查homebrew brew doctor #安装python brew install python3 homebrew用法 搜索软件：brew search 软件名，如brew search wget 安装软件：brew install 软件名，如brew install wget 卸载软件：brew remove 软件名，如brew remove wget brew list 列出已安装的软件 brew update 更新brew brew home 用浏览器打开brew的官方网站 brew info 显示软件信息 brew deps 显示包依赖 brew -v brew -h Windows 检查版本： CMD下： python --version or 直接python尝试进入 安装： #官网下载，安装时选择Add Python to PATH http://python.org/downloads/]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
</search>
